#!/usr/bin/env python2
# --------------------------------------------------------------------------------------------------
# HITCON CTF 2017 - Sakura (RE 300)
# --------------------------------------------------------------------------------------------------
from z3 import *

IDX_2 = [
    0x01, 0x06, 0x02, 0x06, 0x01, 0x07, 0x02, 0x07, 0x02, 0x01, 0x03, 0x01, 0x02, 0x04, 0x03, 0x04,
    0x01, 0x06, 0x01, 0x07, 0x02, 0x08, 0x03, 0x08, 0x02, 0x09, 0x03, 0x09, 0x02, 0x01, 0x02, 0x02,
    0x04, 0x06, 0x05, 0x06, 0x03, 0x08, 0x03, 0x09, 0x04, 0x02, 0x04, 0x03, 0x04, 0x05, 0x04, 0x06,
    0x05, 0x04, 0x06, 0x04, 0x05, 0x03, 0x05, 0x04, 0x05, 0x06, 0x05, 0x07, 0x07, 0x01, 0x08, 0x01,
    0x07, 0x02, 0x08, 0x02, 0x06, 0x04, 0x06, 0x05, 0x06, 0x07, 0x06, 0x08, 0x07, 0x06, 0x08, 0x06,
    0x07, 0x09, 0x08, 0x09, 0x07, 0x01, 0x07, 0x02, 0x08, 0x03, 0x09, 0x03, 0x08, 0x04, 0x09, 0x04,
    0x08, 0x08, 0x08, 0x09, 0x09, 0x03, 0x09, 0x04, 0x01, 0x0d, 0x02, 0x0d, 0x01, 0x12, 0x02, 0x12,
    0x01, 0x13, 0x02, 0x13, 0x01, 0x0c, 0x01, 0x0d, 0x02, 0x0e, 0x03, 0x0e, 0x01, 0x12, 0x01, 0x13,
    0x03, 0x0f, 0x04, 0x0f, 0x03, 0x0b, 0x03, 0x0c, 0x06, 0x0f, 0x07, 0x0f, 0x07, 0x10, 0x08, 0x10,
    0x08, 0x0b, 0x09, 0x0b, 0x08, 0x0c, 0x09, 0x0c, 0x07, 0x12, 0x07, 0x13, 0x08, 0x11, 0x09, 0x11,
    0x09, 0x0b, 0x09, 0x0c, 0x09, 0x11, 0x09, 0x12, 0x0b, 0x04, 0x0c, 0x04, 0x0b, 0x07, 0x0c, 0x07,
    0x0b, 0x04, 0x0b, 0x05, 0x0c, 0x03, 0x0d, 0x03, 0x0b, 0x07, 0x0b, 0x08, 0x0c, 0x06, 0x0d, 0x06,
    0x0c, 0x09, 0x0d, 0x09, 0x0d, 0x01, 0x0e, 0x01, 0x0d, 0x05, 0x0d, 0x06, 0x0e, 0x04, 0x0f, 0x04,
    0x0d, 0x08, 0x0d, 0x09, 0x0e, 0x07, 0x0f, 0x07, 0x0e, 0x01, 0x0e, 0x02, 0x0e, 0x04, 0x0e, 0x05,
    0x0f, 0x03, 0x10, 0x03, 0x0e, 0x07, 0x0e, 0x08, 0x0f, 0x06, 0x10, 0x06, 0x10, 0x09, 0x11, 0x09,
    0x10, 0x02, 0x10, 0x03, 0x11, 0x01, 0x12, 0x01, 0x10, 0x05, 0x10, 0x06, 0x11, 0x04, 0x12, 0x04,
    0x10, 0x08, 0x10, 0x09, 0x11, 0x07, 0x12, 0x07, 0x11, 0x01, 0x11, 0x02, 0x11, 0x04, 0x11, 0x05,
    0x12, 0x03, 0x13, 0x03, 0x12, 0x06, 0x13, 0x06, 0x13, 0x02, 0x13, 0x03, 0x13, 0x05, 0x13, 0x06,
    0x0b, 0x0d, 0x0c, 0x0d, 0x0b, 0x0e, 0x0c, 0x0e, 0x0b, 0x11, 0x0c, 0x11, 0x0b, 0x10, 0x0b, 0x11,
    0x0c, 0x0f, 0x0d, 0x0f, 0x0c, 0x12, 0x0d, 0x12, 0x0c, 0x13, 0x0d, 0x13, 0x0d, 0x0b, 0x0e, 0x0b,
    0x0d, 0x0b, 0x0d, 0x0c, 0x0d, 0x0f, 0x0d, 0x10, 0x0d, 0x12, 0x0d, 0x13, 0x0e, 0x11, 0x0f, 0x11,
    0x0e, 0x0b, 0x0e, 0x0c, 0x0f, 0x0d, 0x10, 0x0d, 0x0e, 0x10, 0x0e, 0x11, 0x0f, 0x0c, 0x0f, 0x0d,
    0x0f, 0x11, 0x0f, 0x12, 0x10, 0x13, 0x11, 0x13, 0x11, 0x0b, 0x12, 0x0b, 0x10, 0x0d, 0x10, 0x0e,
    0x11, 0x0c, 0x12, 0x0c, 0x11, 0x0f, 0x12, 0x0f, 0x10, 0x12, 0x10, 0x13, 0x11, 0x0b, 0x11, 0x0c,
    0x11, 0x0e, 0x11, 0x0f, 0x12, 0x0d, 0x13, 0x0d, 0x12, 0x10, 0x13, 0x10, 0x11, 0x12, 0x11, 0x13,
    0x12, 0x11, 0x13, 0x11, 0x13, 0x0d, 0x13, 0x0e, 0x02, 0x02, 0x03, 0x02,
]

IDX_3 = [
    0x02, 0x02, 0x03, 0x02, 0x04, 0x02, 0x02, 0x05, 0x03, 0x05, 0x04, 0x05, 0x03, 0x03, 0x04, 0x03,
    0x05, 0x03, 0x05, 0x07, 0x06, 0x07, 0x07, 0x07, 0x06, 0x05, 0x07, 0x05, 0x08, 0x05, 0x06, 0x08,
    0x07, 0x08, 0x08, 0x08, 0x02, 0x0c, 0x02, 0x0d, 0x02, 0x0e, 0x03, 0x0b, 0x04, 0x0b, 0x05, 0x0b,
    0x04, 0x0b, 0x04, 0x0c, 0x04, 0x0d, 0x04, 0x0f, 0x04, 0x10, 0x04, 0x11, 0x05, 0x13, 0x06, 0x13,
    0x07, 0x13, 0x06, 0x0d, 0x06, 0x0e, 0x06, 0x0f, 0x06, 0x11, 0x06, 0x12, 0x06, 0x13, 0x08, 0x10,
    0x08, 0x11, 0x08, 0x12, 0x0d, 0x01, 0x0d, 0x02, 0x0d, 0x03, 0x0f, 0x02, 0x0f, 0x03, 0x0f, 0x04,
    0x0f, 0x06, 0x0f, 0x07, 0x0f, 0x08, 0x11, 0x07, 0x11, 0x08, 0x11, 0x09, 0x0b, 0x0c, 0x0b, 0x0d,
    0x0b, 0x0e, 0x13, 0x10, 0x13, 0x11, 0x13, 0x12,
]

IDX_4 = [
    0x02, 0x10, 0x03, 0x10, 0x04, 0x10, 0x05, 0x10, 0x02, 0x10, 0x02, 0x11, 0x02, 0x12, 0x02, 0x13,
    0x03, 0x0e, 0x03, 0x0f, 0x03, 0x10, 0x03, 0x11, 0x05, 0x0e, 0x06, 0x0e, 0x07, 0x0e, 0x08, 0x0e,
    0x05, 0x0b, 0x05, 0x0c, 0x05, 0x0d, 0x05, 0x0e, 0x05, 0x10, 0x05, 0x11, 0x05, 0x12, 0x05, 0x13,
    0x07, 0x0d, 0x07, 0x0e, 0x07, 0x0f, 0x07, 0x10, 0x08, 0x0b, 0x08, 0x0c, 0x08, 0x0d, 0x08, 0x0e,
    0x0b, 0x05, 0x0c, 0x05, 0x0d, 0x05, 0x0e, 0x05, 0x10, 0x05, 0x11, 0x05, 0x12, 0x05, 0x13, 0x05,
    0x0b, 0x10, 0x0c, 0x10, 0x0d, 0x10, 0x0e, 0x10, 0x10, 0x0e, 0x11, 0x0e, 0x12, 0x0e, 0x13, 0x0e,
]

IDX_5 = [
    0x03, 0x01, 0x03, 0x02, 0x03, 0x03, 0x03, 0x04, 0x03, 0x05, 0x07, 0x05, 0x07, 0x06, 0x07, 0x07,
    0x07, 0x08, 0x07, 0x09, 0x01, 0x0c, 0x02, 0x0c, 0x03, 0x0c, 0x04, 0x0c, 0x05, 0x0c, 0x02, 0x11,
    0x03, 0x11, 0x04, 0x11, 0x05, 0x11, 0x06, 0x11, 0x04, 0x0d, 0x05, 0x0d, 0x06, 0x0d, 0x07, 0x0d,
    0x08, 0x0d, 0x05, 0x12, 0x06, 0x12, 0x07, 0x12, 0x08, 0x12, 0x09, 0x12, 0x0b, 0x0c, 0x0c, 0x0c,
    0x0d, 0x0c, 0x0e, 0x0c, 0x0f, 0x0c, 0x0f, 0x12, 0x10, 0x12, 0x11, 0x12, 0x12, 0x12, 0x13, 0x12,
]

IDX_6 = [
    0x02, 0x04, 0x02, 0x05, 0x02, 0x06, 0x02, 0x07, 0x02, 0x08, 0x02, 0x09, 0x08, 0x01, 0x08, 0x02,
    0x08, 0x03, 0x08, 0x04, 0x08, 0x05, 0x08, 0x06,
]

IDX_8 = [
    0x0b, 0x08, 0x0c, 0x08, 0x0d, 0x08, 0x0e, 0x08, 0x0f, 0x08, 0x10, 0x08, 0x11, 0x08, 0x12, 0x08,
    0x0c, 0x02, 0x0d, 0x02, 0x0e, 0x02, 0x0f, 0x02, 0x10, 0x02, 0x11, 0x02, 0x12, 0x02, 0x13, 0x02,
    0x0c, 0x02, 0x0c, 0x03, 0x0c, 0x04, 0x0c, 0x05, 0x0c, 0x06, 0x0c, 0x07, 0x0c, 0x08, 0x0c, 0x09,
    0x12, 0x01, 0x12, 0x02, 0x12, 0x03, 0x12, 0x04, 0x12, 0x05, 0x12, 0x06, 0x12, 0x07, 0x12, 0x08,
    0x0c, 0x0c, 0x0c, 0x0d, 0x0c, 0x0e, 0x0c, 0x0f, 0x0c, 0x10, 0x0c, 0x11, 0x0c, 0x12, 0x0c, 0x13,
    0x12, 0x0b, 0x12, 0x0c, 0x12, 0x0d, 0x12, 0x0e, 0x12, 0x0f, 0x12, 0x10, 0x12, 0x11, 0x12, 0x12,
]


equations = [
    (IDX_2, 0x11, 2), (IDX_2, 0x03, 2), (IDX_2, 0x03, 2), (IDX_3, 0x18, 3), (IDX_2, 0x04, 2),
    (IDX_2, 0x0b, 2), (IDX_3, 0x18, 3), (IDX_2, 0x11, 2), (IDX_2, 0x03, 2), (IDX_2, 0x08, 2),
    (IDX_6, 0x1e, 6), (IDX_3, 0x17, 3), (IDX_5, 0x1a, 5), (IDX_2, 0x03, 2), (IDX_2, 0x09, 2),
    (IDX_2, 0x11, 2), (IDX_2, 0x0b, 2), (IDX_2, 0x04, 2), (IDX_3, 0x06, 3), (IDX_2, 0x09, 2),
    (IDX_2, 0x03, 2), (IDX_3, 0x06, 3), (IDX_3, 0x07, 3), (IDX_2, 0x04, 2), (IDX_2, 0x10, 2),
    (IDX_2, 0x04, 2), (IDX_2, 0x03, 2), (IDX_2, 0x10, 2), (IDX_2, 0x03, 2), (IDX_2, 0x0a, 2),
    (IDX_2, 0x03, 2), (IDX_5, 0x13, 5), (IDX_2, 0x11, 2), (IDX_6, 0x1e, 6), (IDX_2, 0x03, 2),
    (IDX_2, 0x0a, 2), (IDX_5, 0x10, 5), (IDX_2, 0x04, 2), (IDX_2, 0x11, 2), (IDX_2, 0x04, 2),
    (IDX_2, 0x05, 2), (IDX_2, 0x11, 2), (IDX_4, 0x0a, 4), (IDX_2, 0x0a, 2), (IDX_5, 0x23, 5),
    (IDX_3, 0x11, 3), (IDX_3, 0x18, 3), (IDX_4, 0x15, 4), (IDX_2, 0x11, 2), (IDX_2, 0x08, 2),
    (IDX_4, 0x1b, 4), (IDX_5, 0x10, 5), (IDX_3, 0x12, 3), (IDX_3, 0x0f, 3), (IDX_4, 0x1e, 4),
    (IDX_5, 0x10, 5), (IDX_3, 0x06, 3), (IDX_4, 0x11, 4), (IDX_4, 0x11, 4), (IDX_2, 0x11, 2),
    (IDX_3, 0x15, 3), (IDX_3, 0x0d, 3), (IDX_2, 0x03, 2), (IDX_2, 0x10, 2), (IDX_4, 0x15, 4),
    (IDX_2, 0x03, 2), (IDX_2, 0x08, 2), (IDX_2, 0x10, 2), (IDX_4, 0x12, 4), (IDX_3, 0x0a, 3),
    (IDX_2, 0x0b, 2), (IDX_2, 0x0a, 2), (IDX_2, 0x09, 2), (IDX_4, 0x0a, 4), (IDX_2, 0x0d, 2),
    (IDX_8, 0x2c, 8), (IDX_8, 0x2c, 8), (IDX_2, 0x05, 2), (IDX_2, 0x06, 2), (IDX_2, 0x0b, 2),
    (IDX_2, 0x08, 2), (IDX_2, 0x05, 2), (IDX_8, 0x27, 8), (IDX_2, 0x08, 2), (IDX_3, 0x08, 3),
    (IDX_2, 0x04, 2), (IDX_2, 0x0f, 2), (IDX_2, 0x0a, 2), (IDX_2, 0x09, 2), (IDX_2, 0x0d, 2),
    (IDX_2, 0x09, 2), (IDX_2, 0x0b, 2), (IDX_2, 0x0e, 2), (IDX_2, 0x0d, 2), (IDX_3, 0x15, 3),
    (IDX_3, 0x08, 3), (IDX_4, 0x14, 4), (IDX_2, 0x0e, 2), (IDX_2, 0x0c, 2), (IDX_2, 0x05, 2),
    (IDX_2, 0x09, 2), (IDX_2, 0x0a, 2), (IDX_2, 0x0e, 2), (IDX_2, 0x0e, 2), (IDX_2, 0x0c, 2),
    (IDX_2, 0x0d, 2), (IDX_2, 0x09, 2), (IDX_3, 0x10, 3), (IDX_2, 0x06, 2), (IDX_8, 0x28, 8),
    (IDX_2, 0x04, 2), (IDX_2, 0x0b, 2), (IDX_5, 0x16, 5), (IDX_2, 0x10, 2), (IDX_2, 0x07, 2),
    (IDX_4, 0x0a, 4), (IDX_2, 0x0b, 2), (IDX_3, 0x0a, 3), (IDX_2, 0x0d, 2), (IDX_2, 0x09, 2),
    (IDX_2, 0x0a, 2), (IDX_2, 0x0c, 2), (IDX_8, 0x2a, 8), (IDX_2, 0x11, 2), (IDX_2, 0x0a, 2),
    (IDX_2, 0x08, 2), (IDX_2, 0x0a, 2), (IDX_2, 0x09, 2), (IDX_2, 0x0e, 2), (IDX_2, 0x08, 2),
    (IDX_2, 0x08, 2), (IDX_5, 0x1a, 5), (IDX_2, 0x08, 2), (IDX_4, 0x0e, 4), (IDX_2, 0x09, 2),
    (IDX_2, 0x06, 2), (IDX_2, 0x0f, 2), (IDX_2, 0x07, 2), (IDX_2, 0x08, 2), (IDX_2, 0x0e, 2),
    (IDX_2, 0x06, 2), (IDX_2, 0x0d, 2), (IDX_2, 0x0f, 2), (IDX_2, 0x09, 2), (IDX_2, 0x03, 2),
    (IDX_2, 0x0d, 2), (IDX_2, 0x0a, 2), (IDX_8, 0x24, 8), (IDX_2, 0x08, 2), (IDX_3, 0x06, 3),
]

# --------------------------------------------------------------------------------------------------
if __name__ == "__main__":
    s = Solver()                                    # our z3 solver

    x_vars, var2xy = { }, { }


    # -------------------------------------------------------------------------
    # Reconstruct equations
    # -------------------------------------------------------------------------
    print '[+] Reconstructing equations...'

    for fam, rval, n in equations:                  # for each equation
        eq = []

        for i in range(n):
            y, x = fam.pop(0), fam.pop(0)           # get coordinates from the right family
            var  = 'x_%d_%d' % (y, x)               # create 'x' variable

            if var not in x_vars:                   # variable already exists?
                x_vars[var] = BitVec(var, 32)       # create a bitvector variable
                var2xy[ x_vars[var] ] = (y, x)      # bitvector --> coordinates

            eq.append( x_vars[var] )


        # add the equation to the constraint set
        add = eq[0]
        for i in range(1, n): add += eq[i]
        s.add( add == rval )

        print '[+]', add, '=', str(rval)


        for i in range(0, n):                       # all variables must be different
            for j in range(i+1, n):
                s.add( And(eq[i] != eq[j]) )



    for _, x in x_vars.iteritems():                 # all variables are in range [1, 9]
        s.add( And(x > 0, x <= 9) )


    # -------------------------------------------------------------------------
    # Solve equations
    # -------------------------------------------------------------------------
    print '[+] Solving equations...'

    if s.check() == sat: 
        print '[+] There is a solution!'

        m   = s.model()
        inp = [ [0 for y in range(20)] for x in range(20)]

        for _, var in x_vars.iteritems():
            y, x = var2xy[var]
            inp[y][x] = m.evaluate(var).as_long()   # extract solution


        print '[+] Dumping array:'
        for row in inp:
            print ''.join( [str(r) for r in row])

        print
        print '[+] Packed array:',
        pack = ''
        for row in inp:
            pack += ''.join( [str(r) for r in row])

        print pack

    else:
        print '[+] No solution found :('

# --------------------------------------------------------------------------------------------------
'''
ispo@nogirl:~/ctf/2017/hitcon_ctf$ ./sakura_crack.py
[+] Reconstructing equations...
[+] x_1_6 + x_2_6 = 17
[+] x_1_7 + x_2_7 = 3
[+] x_2_1 + x_3_1 = 3
[+] x_2_2 + x_3_2 + x_4_2 = 24
[+] x_2_4 + x_3_4 = 4
[+] x_1_6 + x_1_7 = 11
[+] x_2_5 + x_3_5 + x_4_5 = 24
[+] x_2_8 + x_3_8 = 17
[+] x_2_9 + x_3_9 = 3
[+] x_2_1 + x_2_2 = 8
[+] x_2_4 + x_2_5 + x_2_6 + x_2_7 + x_2_8 + x_2_9 = 30
[+] x_3_3 + x_4_3 + x_5_3 = 23
[+] x_3_1 + x_3_2 + x_3_3 + x_3_4 + x_3_5 = 26
[+] x_4_6 + x_5_6 = 3
[+] x_3_8 + x_3_9 = 9
[+] x_4_2 + x_4_3 = 17
[+] x_4_5 + x_4_6 = 11
[+] x_5_4 + x_6_4 = 4
[+] x_5_7 + x_6_7 + x_7_7 = 6
[+] x_5_3 + x_5_4 = 9
[+] x_5_6 + x_5_7 = 3
[+] x_6_5 + x_7_5 + x_8_5 = 6
[+] x_6_8 + x_7_8 + x_8_8 = 7
[+] x_7_1 + x_8_1 = 4
[+] x_7_2 + x_8_2 = 16
[+] x_6_4 + x_6_5 = 4
[+] x_6_7 + x_6_8 = 3
[+] x_7_6 + x_8_6 = 16
[+] x_7_9 + x_8_9 = 3
[+] x_7_1 + x_7_2 = 10
[+] x_8_3 + x_9_3 = 3
[+] x_7_5 + x_7_6 + x_7_7 + x_7_8 + x_7_9 = 19
[+] x_8_4 + x_9_4 = 17
[+] x_8_1 + x_8_2 + x_8_3 + x_8_4 + x_8_5 + x_8_6 = 30
[+] x_8_8 + x_8_9 = 3
[+] x_9_3 + x_9_4 = 10
[+] x_1_12 + x_2_12 + x_3_12 + x_4_12 + x_5_12 = 16
[+] x_1_13 + x_2_13 = 4
[+] x_1_18 + x_2_18 = 17
[+] x_1_19 + x_2_19 = 4
[+] x_1_12 + x_1_13 = 5
[+] x_2_14 + x_3_14 = 17
[+] x_2_16 + x_3_16 + x_4_16 + x_5_16 = 10
[+] x_1_18 + x_1_19 = 10
[+] x_2_17 + x_3_17 + x_4_17 + x_5_17 + x_6_17 = 35
[+] x_2_12 + x_2_13 + x_2_14 = 17
[+] x_3_11 + x_4_11 + x_5_11 = 24
[+] x_2_16 + x_2_17 + x_2_18 + x_2_19 = 21
[+] x_3_15 + x_4_15 = 17
[+] x_3_11 + x_3_12 = 8
[+] x_3_14 + x_3_15 + x_3_16 + x_3_17 = 27
[+] x_4_13 + x_5_13 + x_6_13 + x_7_13 + x_8_13 = 16
[+] x_4_11 + x_4_12 + x_4_13 = 18
[+] x_4_15 + x_4_16 + x_4_17 = 15
[+] x_5_14 + x_6_14 + x_7_14 + x_8_14 = 30
[+] x_5_18 + x_6_18 + x_7_18 + x_8_18 + x_9_18 = 16
[+] x_5_19 + x_6_19 + x_7_19 = 6
[+] x_5_11 + x_5_12 + x_5_13 + x_5_14 = 17
[+] x_5_16 + x_5_17 + x_5_18 + x_5_19 = 17
[+] x_6_15 + x_7_15 = 17
[+] x_6_13 + x_6_14 + x_6_15 = 21
[+] x_6_17 + x_6_18 + x_6_19 = 13
[+] x_7_16 + x_8_16 = 3
[+] x_8_11 + x_9_11 = 16
[+] x_7_13 + x_7_14 + x_7_15 + x_7_16 = 21
[+] x_8_12 + x_9_12 = 3
[+] x_7_18 + x_7_19 = 8
[+] x_8_17 + x_9_17 = 16
[+] x_8_11 + x_8_12 + x_8_13 + x_8_14 = 18
[+] x_8_16 + x_8_17 + x_8_18 = 10
[+] x_9_11 + x_9_12 = 11
[+] x_9_17 + x_9_18 = 10
[+] x_11_4 + x_12_4 = 9
[+] x_11_5 + x_12_5 + x_13_5 + x_14_5 = 10
[+] x_11_7 + x_12_7 = 13
[+] x_11_8 + x_12_8 + x_13_8 + x_14_8 + x_15_8 + x_16_8 + x_17_8 + x_18_8 = 44
[+] x_12_2 + x_13_2 + x_14_2 + x_15_2 + x_16_2 + x_17_2 + x_18_2 + x_19_2 = 44
[+] x_11_4 + x_11_5 = 5
[+] x_12_3 + x_13_3 = 6
[+] x_11_7 + x_11_8 = 11
[+] x_12_6 + x_13_6 = 8
[+] x_12_9 + x_13_9 = 5
[+] x_12_2 + x_12_3 + x_12_4 + x_12_5 + x_12_6 + x_12_7 + x_12_8 + x_12_9 = 39
[+] x_13_1 + x_14_1 = 8
[+] x_13_1 + x_13_2 + x_13_3 = 8
[+] x_13_5 + x_13_6 = 4
[+] x_14_4 + x_15_4 = 15
[+] x_13_8 + x_13_9 = 10
[+] x_14_7 + x_15_7 = 9
[+] x_14_1 + x_14_2 = 13
[+] x_14_4 + x_14_5 = 9
[+] x_15_3 + x_16_3 = 11
[+] x_14_7 + x_14_8 = 14
[+] x_15_6 + x_16_6 = 13
[+] x_15_2 + x_15_3 + x_15_4 = 21
[+] x_15_6 + x_15_7 + x_15_8 = 8
[+] x_16_5 + x_17_5 + x_18_5 + x_19_5 = 20
[+] x_16_9 + x_17_9 = 14
[+] x_16_2 + x_16_3 = 12
[+] x_17_1 + x_18_1 = 5
[+] x_16_5 + x_16_6 = 9
[+] x_17_4 + x_18_4 = 10
[+] x_16_8 + x_16_9 = 14
[+] x_17_7 + x_18_7 = 14
[+] x_17_1 + x_17_2 = 12
[+] x_17_4 + x_17_5 = 13
[+] x_18_3 + x_19_3 = 9
[+] x_17_7 + x_17_8 + x_17_9 = 16
[+] x_18_6 + x_19_6 = 6
[+] x_18_1 + x_18_2 + x_18_3 + x_18_4 + x_18_5 + x_18_6 + x_18_7 + x_18_8 = 40
[+] x_19_2 + x_19_3 = 4
[+] x_19_5 + x_19_6 = 11
[+] x_11_12 + x_12_12 + x_13_12 + x_14_12 + x_15_12 = 22
[+] x_11_13 + x_12_13 = 16
[+] x_11_14 + x_12_14 = 7
[+] x_11_16 + x_12_16 + x_13_16 + x_14_16 = 10
[+] x_11_17 + x_12_17 = 11
[+] x_11_12 + x_11_13 + x_11_14 = 10
[+] x_11_16 + x_11_17 = 13
[+] x_12_15 + x_13_15 = 9
[+] x_12_18 + x_13_18 = 10
[+] x_12_19 + x_13_19 = 12
[+] x_12_12 + x_12_13 + x_12_14 + x_12_15 + x_12_16 + x_12_17 + x_12_18 + x_12_19 = 42
[+] x_13_11 + x_14_11 = 17
[+] x_13_11 + x_13_12 = 10
[+] x_13_15 + x_13_16 = 8
[+] x_13_18 + x_13_19 = 10
[+] x_14_17 + x_15_17 = 9
[+] x_14_11 + x_14_12 = 14
[+] x_15_13 + x_16_13 = 8
[+] x_14_16 + x_14_17 = 8
[+] x_15_18 + x_16_18 + x_17_18 + x_18_18 + x_19_18 = 26
[+] x_15_12 + x_15_13 = 8
[+] x_16_14 + x_17_14 + x_18_14 + x_19_14 = 14
[+] x_15_17 + x_15_18 = 9
[+] x_16_19 + x_17_19 = 6
[+] x_17_11 + x_18_11 = 15
[+] x_16_13 + x_16_14 = 7
[+] x_17_12 + x_18_12 = 8
[+] x_17_15 + x_18_15 = 14
[+] x_16_18 + x_16_19 = 6
[+] x_17_11 + x_17_12 = 13
[+] x_17_14 + x_17_15 = 15
[+] x_18_13 + x_19_13 = 9
[+] x_18_16 + x_19_16 = 3
[+] x_17_18 + x_17_19 = 13
[+] x_18_17 + x_19_17 = 10
[+] x_18_11 + x_18_12 + x_18_13 + x_18_14 + x_18_15 + x_18_16 + x_18_17 + x_18_18 = 36
[+] x_19_13 + x_19_14 = 8
[+] x_19_16 + x_19_17 + x_19_18 = 6
[+] Solving equations...
[+] There is a solution!
[+] Dumping array:
00000000000000000000
00000092000041000091
01703781920063804683
02961800810710983700
00890920000936091500
00081012000821602843
00003101200004980931
03700293410003792062
01928370120712801720
00019000000920000910
00000000000000000000
00001406500027104900
00418357920089641275
01250130730910053037
07607208600860002600
00948051200053000360
00570180860005200051
04804905380850690085
01786329400736152840
00310740000003501230

[+] Packed array: 0000000000000000000000000092000041000091017037819200638046830296180081071098370000890920000936091500000810120008216028430000310120000498093103700293410003792062019283701207128017200001900000092000091000000000000000000000000014065000271049000041835792008964127501250130730910053037076072086008600026000094805120005300036000570180860005200051048049053808506900850178632940073615284000310740000003501230

ispo@nogirl:~/ctf/2017/hitcon_ctf/$ ./sakura-fdb3c896d8a3029f40a38150b2e30a79
0000000000000000000000000092000041000091017037819200638046830296180081071098370000890920000936091500000810120008216028430000310120000498093103700293410003792062019283701207128017200001900000092000091000000000000000000000000014065000271049000041835792008964127501250130730910053037076072086008600026000094805120005300036000570180860005200051048049053808506900850178632940073615284000310740000003501230
hitcon{6c0d62189adfd27a12289890d5b89c0dc8098bc976ecc3f6d61ec0429cccae61}
'''
# --------------------------------------------------------------------------------------------------
