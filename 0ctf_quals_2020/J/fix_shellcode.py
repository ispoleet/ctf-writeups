#!/usr/bin/env python3
# ----------------------------------------------------------------------------------------
# 0CTF 2019 - J (RE 578)
# ----------------------------------------------------------------------------------------
import struct
import ida_bytes
import ida_name


shellcode_stage_1 = [
    0x55, 0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54, 0x53, 0x48, 0x85, 0xD2, 0x0F, 0x94, 0x44,
    0x24, 0xDA, 0x48, 0x85, 0xC9, 0x0F, 0x94, 0x44, 0x24, 0xDB, 0x49, 0x83, 0xF8, 0x10, 0xB8, 0x19,
    0x2A, 0xF8, 0x28, 0x41, 0xB9, 0x50, 0x2E, 0x43, 0xED, 0x44, 0x0F, 0x45, 0xC8, 0x48, 0x89, 0x54,
    0x24, 0xF8, 0x48, 0x8D, 0x42, 0x68, 0x48, 0x89, 0x44, 0x24, 0xF0, 0xB8, 0xA4, 0x91, 0x06, 0xBF,
    0xCC, 0x26, 0xB8, 0xF2, 0x4C, 0x67, 0x6E, 0x41, 0xB8, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x1F, 0x00,
    0x89, 0xC2, 0x81, 0xFA, 0x72, 0xE3, 0x70, 0xF9, 0xCC, 0xBE, 0x81, 0xFA, 0x7B, 0xF0, 0x2D, 0x3C,
    0xCC, 0xAB, 0x4B, 0x95, 0xE8, 0xBB, 0x81, 0xFA, 0xFB, 0xA4, 0x73, 0x53, 0xCC, 0x7E, 0xD3, 0xDF,
    0x72, 0xC0, 0x81, 0xFA, 0xF1, 0x4C, 0x67, 0x6E, 0xCC, 0x24, 0xB0, 0x84, 0x84, 0xE0, 0x81, 0xFA,
    0xFC, 0xA4, 0x73, 0x53, 0xCC, 0xE3, 0x11, 0x7F, 0xEE, 0x8F, 0x81, 0xFA, 0x2B, 0xE0, 0xBC, 0x6A,
    0x89, 0xD0, 0xCC, 0xA3, 0xB8, 0xF8, 0x56, 0xAE, 0x9F, 0x45, 0x31, 0xD2, 0xCC, 0x54, 0x66, 0x90,
    0x81, 0xFA, 0x61, 0xE8, 0x4D, 0xC1, 0xCC, 0x17, 0x2D, 0xDC, 0xA9, 0x77, 0x81, 0xFA, 0xF7, 0x56,
    0xAE, 0x9F, 0xCC, 0xB8, 0x51, 0xB2, 0x7D, 0x2F, 0x81, 0xFA, 0x3B, 0x90, 0x56, 0x82, 0xCC, 0xA5,
    0xD0, 0x48, 0x03, 0x16, 0x81, 0xFA, 0x6E, 0xD8, 0xCE, 0x9A, 0xCC, 0x35, 0x30, 0xD4, 0x74, 0x13,
    0x81, 0xFA, 0x1A, 0x9C, 0x52, 0x9C, 0x89, 0xD0, 0xCC, 0xBD, 0xDD, 0x21, 0x58, 0x66, 0xCC, 0x1B,
    0x75, 0x56, 0xBB, 0x66, 0x66, 0x66, 0x66, 0x2E, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x81, 0xFA, 0x18, 0x2A, 0xF8, 0x28, 0xCC, 0x39, 0xA1, 0x0D, 0xD3, 0xA9, 0x81, 0xFA, 0x73, 0xE3,
    0x70, 0xF9, 0xCC, 0x97, 0xDD, 0x4B, 0x77, 0xA6, 0x81, 0xFA, 0x81, 0x4A, 0x2A, 0x14, 0xCC, 0x5B,
    0x92, 0x5B, 0x25, 0xA8, 0x81, 0xFA, 0xC1, 0x8D, 0x2C, 0x28, 0x89, 0xD0, 0xCC, 0x0A, 0x62, 0x97,
    0x6B, 0xAF, 0x44, 0x8B, 0x54, 0x24, 0xC8, 0x41, 0x83, 0xC2, 0x06, 0xB8, 0xF8, 0x56, 0xAE, 0x9F,
    0xCC, 0x7C, 0xD6, 0x20, 0x29, 0x66, 0x66, 0x2E, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x81, 0xFA, 0x77, 0xD4, 0x32, 0xE3, 0xCC, 0x39, 0x61, 0x9C, 0xB2, 0x3C, 0x81, 0xFA, 0x62, 0xE8,
    0x4D, 0xC1, 0xCC, 0x45, 0x3E, 0xF7, 0xD3, 0x1F, 0x81, 0xFA, 0xCE, 0x4F, 0x7B, 0xC3, 0x44, 0x89,
    0xC8, 0xCC, 0x11, 0xC8, 0xFB, 0xFB, 0x85, 0x81, 0xFA, 0x5A, 0x64, 0x1C, 0xD4, 0x89, 0xD0, 0xCC,
    0x76, 0x7D, 0x66, 0xA8, 0x19, 0x8B, 0x44, 0x24, 0xCC, 0x83, 0xC0, 0xF9, 0x48, 0x98, 0x48, 0x8B,
    0x54, 0x24, 0xD0, 0x0F, 0xB7, 0x04, 0x42, 0x8B, 0x54, 0x24, 0xCC, 0x83, 0xC2, 0xF2, 0xCC, 0x18,
    0x5B, 0x43, 0x24, 0x81, 0xFA, 0x7C, 0xF0, 0x2D, 0x3C, 0xCC, 0xAF, 0xAF, 0x25, 0xC7, 0x3A, 0x81,
    0xFA, 0x8B, 0xC7, 0x8E, 0x3D, 0xCC, 0x68, 0xE0, 0xC8, 0x0A, 0x90, 0x81, 0xFA, 0xFC, 0x7C, 0x0A,
    0x43, 0x89, 0xD0, 0xCC, 0x46, 0x49, 0xC9, 0xDF, 0xF8, 0x48, 0x63, 0x44, 0x24, 0xCC, 0x48, 0x8B,
    0x54, 0x24, 0xD0, 0x66, 0x44, 0x89, 0x3C, 0x42, 0x31, 0xC0, 0x2B, 0x44, 0x24, 0xCC, 0x41, 0xBB,
    0x01, 0x00, 0x00, 0x00, 0x41, 0x29, 0xC3, 0xB8, 0x8B, 0xC7, 0x8E, 0x3D, 0xCC, 0x3D, 0x0B, 0xDB,
    0xBB, 0x81, 0xFA, 0xF8, 0x56, 0xAE, 0x9F, 0xCC, 0x82, 0x8B, 0xF2, 0x43, 0xF1, 0x81, 0xFA, 0x34,
    0xDE, 0x0D, 0xB1, 0xCC, 0x5B, 0x89, 0x5C, 0x2B, 0x43, 0x81, 0xFA, 0xA4, 0x91, 0x06, 0xBF, 0x89,
    0xD0, 0xCC, 0x5D, 0x48, 0x04, 0x80, 0xF1, 0x8A, 0x5C, 0x24, 0xDA, 0x8A, 0x44, 0x24, 0xDB, 0x89,
    0xDA, 0x30, 0xC2, 0xBA, 0xCE, 0x4F, 0x7B, 0xC3, 0xBE, 0x1A, 0x9C, 0x52, 0x9C, 0x0F, 0x45, 0xD6,
    0x84, 0xC0, 0x89, 0xD0, 0x0F, 0x45, 0xC6, 0x84, 0xDB, 0x0F, 0x44, 0xC2, 0xCC, 0xDB, 0xDC, 0x6D,
    0x04, 0x81, 0xFA, 0x19, 0x2A, 0xF8, 0x28, 0xCC, 0xE7, 0x04, 0xBC, 0xA9, 0x07, 0x81, 0xFA, 0x29,
    0xB1, 0x28, 0x29, 0xCC, 0xDE, 0xF4, 0xFC, 0x85, 0x64, 0x81, 0xFA, 0x5C, 0x4C, 0x6C, 0x34, 0x89,
    0xD0, 0xCC, 0x2F, 0xAD, 0x60, 0xC4, 0xCE, 0xB8, 0x31, 0x00, 0x00, 0x00, 0x2B, 0x44, 0x24, 0xC8,
    0x48, 0x98, 0x48, 0x8B, 0x54, 0x24, 0xD0, 0x0F, 0xB7, 0x04, 0x42, 0x66, 0xF7, 0xD8, 0x8B, 0x54,
    0x24, 0xC8, 0xF7, 0xDA, 0xBE, 0x01, 0x00, 0x00, 0x00, 0x29, 0xD6, 0x48, 0x63, 0xD6, 0x48, 0x8B,
    0x74, 0x24, 0xE0, 0x66, 0x89, 0x04, 0x56, 0xB8, 0x32, 0x00, 0x00, 0x00, 0xCC, 0x22, 0xDC, 0x7B,
    0xD2, 0x81, 0xFA, 0x78, 0xD4, 0x32, 0xE3, 0xCC, 0xD8, 0xD7, 0xED, 0x93, 0x7B, 0x81, 0xFA, 0x50,
    0x2E, 0x43, 0xED, 0xCC, 0x4A, 0x4C, 0x2B, 0x39, 0x8A, 0x81, 0xFA, 0x57, 0x6C, 0x57, 0xF6, 0x89,
    0xD0, 0xCC, 0x07, 0xFF, 0xA4, 0xB5, 0x15, 0x8B, 0x44, 0x24, 0xCC, 0xF7, 0xD8, 0xBA, 0xF9, 0xFF,
    0xFF, 0xFF, 0x29, 0xC2, 0x48, 0x63, 0xC2, 0x48, 0x8B, 0x54, 0x24, 0xD0, 0x0F, 0xB7, 0x04, 0x42,
    0x8B, 0x54, 0x24, 0xCC, 0x83, 0xC2, 0xFA, 0x48, 0x63, 0xD2, 0x48, 0x8B, 0x7C, 0x24, 0xD0, 0x66,
    0x44, 0x8B, 0x3C, 0x57, 0x66, 0x41, 0x0F, 0xAC, 0xC7, 0x07, 0xB8, 0xFC, 0x7C, 0x0A, 0x43, 0xCC,
    0xD3, 0xE3, 0x0D, 0x77, 0x81, 0xFA, 0x0A, 0xD5, 0x8F, 0x71, 0xCC, 0x46, 0x8D, 0x4B, 0x99, 0x6A,
    0x81, 0xFA, 0xF2, 0x4C, 0x67, 0x6E, 0x89, 0xD0, 0xCC, 0xB4, 0x7F, 0x98, 0x6F, 0x77, 0xCC, 0x21,
    0x63, 0x2D, 0x93, 0xB8, 0xF2, 0x4C, 0x67, 0x6E, 0x45, 0x31, 0xC0, 0xCC, 0xB0, 0x19, 0xA5, 0x10,
    0x8B, 0x44, 0x24, 0xEC, 0x83, 0xF8, 0x07, 0xB8, 0x57, 0x6C, 0x57, 0xF6, 0xBA, 0x81, 0x4A, 0x2A,
    0x14, 0x0F, 0x44, 0xC2, 0xCC, 0x5B, 0x5B, 0x15, 0xE2, 0x8B, 0x44, 0x24, 0xC8, 0xF7, 0xD8, 0xBA,
    0x02, 0x00, 0x00, 0x00, 0x29, 0xC2, 0x48, 0x63, 0xC2, 0x48, 0x8B, 0x54, 0x24, 0xE0, 0x66, 0x44,
    0x89, 0x24, 0x42, 0xB8, 0x33, 0x00, 0x00, 0x00, 0x2B, 0x44, 0x24, 0xC8, 0x48, 0x98, 0x48, 0x8B,
    0x54, 0x24, 0xD0, 0x66, 0x8B, 0x14, 0x42, 0x66, 0x85, 0xD2, 0xCC, 0xEB, 0x16, 0x50, 0x5C, 0x12,
    0xB8, 0x01, 0x00, 0x01, 0x00, 0x45, 0x31, 0xED, 0xBF, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00,
    0x89, 0xFB, 0x0F, 0xB7, 0xF2, 0x31, 0xD2, 0xF7, 0xF6, 0x0F, 0xAF, 0xC3, 0x41, 0x81, 0xC5, 0xE5,
    0xB8, 0x48, 0xDD, 0x41, 0x29, 0xC5, 0x41, 0x81, 0xC5, 0x1B, 0x47, 0xB7, 0x22, 0x66, 0x85, 0xD2,
    0x44, 0x89, 0xEF, 0x41, 0x89, 0xDD, 0x89, 0xF0, 0xCC, 0x3C, 0xCC, 0xB1, 0x30, 0x32, 0x4A, 0xB8,
    0x30, 0x00, 0x00, 0x00, 0x2B, 0x44, 0x24, 0xC8, 0x48, 0x98, 0x48, 0x8B, 0x54, 0x24, 0xD0, 0x66,
    0x8B, 0x14, 0x42, 0x66, 0x85, 0xD2, 0xCC, 0xDF, 0xEA, 0xC3, 0xF6, 0xDE, 0xB8, 0x01, 0x00, 0x01,
    0x00, 0x31, 0xDB, 0xBF, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x89, 0xFD, 0x0F, 0xB7, 0xF2, 0x31, 0xD2, 0xF7, 0xF6, 0x0F, 0xAF, 0xC5, 0x29, 0xC3, 0x66, 0x85,
    0xD2, 0x89, 0xDF, 0x89, 0xEB, 0x89, 0xF0, 0xCC, 0xC8, 0xCC, 0x73, 0x7E, 0x4A, 0x6C, 0x8B, 0x44,
    0x24, 0xCC, 0x83, 0xC0, 0xF1, 0x48, 0x98, 0x48, 0x8B, 0x54, 0x24, 0xD0, 0x0F, 0xB7, 0x04, 0x42,
    0xC1, 0xE0, 0x09, 0x8B, 0x54, 0x24, 0xCC, 0x83, 0xC2, 0xF2, 0x48, 0x63, 0xD2, 0x48, 0x8B, 0x7C,
    0x24, 0xD0, 0x44, 0x0F, 0xB7, 0x3C, 0x57, 0x41, 0xC1, 0xEF, 0x07, 0x44, 0x89, 0xFA, 0xF7, 0xD2,
    0xF7, 0xD0, 0x81, 0xE2, 0xD5, 0xFE, 0xFF, 0xFF, 0x41, 0x81, 0xE7, 0x2A, 0x01, 0x00, 0x00, 0x25,
    0xD5, 0xFE, 0xFF, 0xFF, 0x41, 0x09, 0xD7, 0x41, 0x31, 0xC7, 0xB8, 0xFC, 0x7C, 0x0A, 0x43, 0xCC,
    0xE4, 0x1B, 0x6F, 0x54, 0xB8, 0x2E, 0x00, 0x00, 0x00, 0x2B, 0x44, 0x24, 0xC8, 0x48, 0x98, 0x48,
    0x8B, 0x54, 0x24, 0xD0, 0x0F, 0xB7, 0x04, 0x42, 0x8B, 0x54, 0x24, 0xC8, 0x83, 0xC2, 0x04, 0x48,
    0x63, 0xD2, 0x48, 0x8B, 0x74, 0x24, 0xE0, 0x66, 0x89, 0x04, 0x56, 0xB8, 0x2F, 0x00, 0x00, 0x00,
    0x2B, 0x44, 0x24, 0xC8, 0x48, 0x98, 0x48, 0x8B, 0x54, 0x24, 0xD0, 0x0F, 0xB7, 0x04, 0x42, 0x8B,
    0x54, 0x24, 0xC8, 0x83, 0xC2, 0x05, 0x48, 0x63, 0xD2, 0x48, 0x8B, 0x74, 0x24, 0xE0, 0x66, 0x89,
    0x04, 0x56, 0xB8, 0xC1, 0x8D, 0x2C, 0x28, 0xCC, 0xB4, 0x26, 0xFF, 0x4F, 0x44, 0x89, 0x74, 0x24,
    0xDC, 0x8B, 0x44, 0x24, 0xDC, 0x83, 0xF8, 0x08, 0xB8, 0x78, 0xD4, 0x32, 0xE3, 0xBA, 0x0A, 0xD5,
    0x8F, 0x71, 0x0F, 0x4C, 0xC2, 0xCC, 0x93, 0x63, 0xF6, 0xB6, 0x44, 0x89, 0x5C, 0x24, 0xCC, 0x8B,
    0x44, 0x24, 0xCC, 0x83, 0xF8, 0x34, 0xB8, 0x2B, 0xE0, 0xBC, 0x6A, 0xBA, 0x34, 0xDE, 0x0D, 0xB1,
    0x0F, 0x4C, 0xC2, 0xCC, 0x20, 0x22, 0xB8, 0x08, 0x44, 0x89, 0x54, 0x24, 0xC8, 0x8B, 0x44, 0x24,
    0xC8, 0x83, 0xF8, 0x34, 0xB8, 0xFC, 0xA4, 0x73, 0x53, 0xBA, 0x73, 0xE3, 0x70, 0xF9, 0x0F, 0x4C,
    0xC2, 0xCC, 0x15, 0x24, 0xB1, 0x14, 0x8B, 0x44, 0x24, 0xCC, 0x89, 0xC2, 0xC1, 0xFA, 0x1F, 0xC1,
    0xEA, 0x1D, 0x01, 0xC2, 0x83, 0xE2, 0xF8, 0x29, 0xD0, 0x89, 0x44, 0x24, 0xEC, 0x8B, 0x44, 0x24,
    0xEC, 0x83, 0xF8, 0x06, 0xB8, 0x3B, 0x90, 0x56, 0x82, 0xBA, 0x5A, 0x64, 0x1C, 0xD4, 0x0F, 0x44,
    0xC2, 0xCC, 0x0E, 0x03, 0x11, 0xD5, 0xB8, 0x32, 0x00, 0x00, 0x00, 0x2B, 0x44, 0x24, 0xC8, 0x48,
    0x98, 0x48, 0x8B, 0x54, 0x24, 0xD0, 0x31, 0xF6, 0x66, 0x2B, 0x34, 0x42, 0x8B, 0x44, 0x24, 0xC8, 
    0xF7, 0xD8, 0xBA, 0x01, 0x00, 0x00, 0x00, 0x29, 0xC2, 0x48, 0x63, 0xC2, 0x48, 0x8B, 0x54, 0x24,
    0xE0, 0x66, 0x89, 0x34, 0x42, 0xB8, 0x31, 0x00, 0x00, 0x00, 0x2B, 0x44, 0x24, 0xC8, 0x48, 0x98,
    0x48, 0x8B, 0x54, 0x24, 0xD0, 0x0F, 0xB7, 0x04, 0x42, 0x45, 0x31, 0xE4, 0x66, 0x41, 0x29, 0xC4,
    0xB8, 0x6E, 0xD8, 0xCE, 0x9A, 0xCC, 0x95, 0xA6, 0x62, 0x92, 0xB8, 0x8B, 0xC7, 0x8E, 0x3D, 0x41,
    0xBB, 0x08, 0x00, 0x00, 0x00, 0xCC, 0x4E, 0x72, 0xE5, 0x30, 0x48, 0x8B, 0x44, 0x24, 0xF8, 0x48,
    0x89, 0x44, 0x24, 0xD0, 0x48, 0x8B, 0x44, 0x24, 0xF0, 0x48, 0x89, 0x44, 0x24, 0xE0, 0xB8, 0x7C,
    0xF0, 0x2D, 0x3C, 0x45, 0x31, 0xF6, 0xCC, 0x13, 0x07, 0x8C, 0xDA, 0x48, 0x63, 0x44, 0x24, 0xDC,
    0x0F, 0xB6, 0x14, 0x41, 0xC1, 0xE2, 0x08, 0x0F, 0xB6, 0x44, 0x41, 0x01, 0x09, 0xD0, 0x48, 0x63,
    0x54, 0x24, 0xDC, 0x48, 0x8B, 0x7C, 0x24, 0xD0, 0x66, 0x89, 0x04, 0x57, 0x44, 0x8B, 0x74, 0x24,
    0xDC, 0x41, 0xFF, 0xC6, 0xB8, 0x7C, 0xF0, 0x2D, 0x3C, 0xCC, 0xBB, 0xD1, 0x16, 0x60, 0x31, 0xDB,
    0x89, 0xD8, 0xC1, 0xE8, 0x1F, 0xF7, 0xDB, 0x29, 0xC3, 0xF7, 0xDB, 0x8B, 0x44, 0x24, 0xC8, 0x83,
    0xC0, 0x03, 0x48, 0x98, 0x48, 0x8B, 0x54, 0x24, 0xE0, 0x66, 0x89, 0x1C, 0x42, 0x8B, 0x44, 0x24,
    0xC8, 0x83, 0xF8, 0x30, 0xB8, 0xC1, 0x8D, 0x2C, 0x28, 0xBA, 0x62, 0xE8, 0x4D, 0xC1, 0x0F, 0x4C,
    0xC2, 0xCC, 0xDB, 0x4E, 0x7F, 0x72, 0x31, 0xED, 0x89, 0xE8, 0xC1, 0xE8, 0x1F, 0xF7, 0xDD, 0x29,
    0xE8, 0x48, 0x63, 0x54, 0x24, 0xC8, 0x48, 0x8B, 0x74, 0x24, 0xE0, 0x66, 0x89, 0x04, 0x56, 0x8B,
    0x54, 0x24, 0xC8, 0x83, 0xFA, 0x00, 0x0F, 0x94, 0xC0, 0x8B, 0x74, 0x24, 0xC8, 0x83, 0xFE, 0x30,
    0x0F, 0x94, 0xC3, 0x30, 0xC3, 0xBF, 0x29, 0xB1, 0x28, 0x29, 0xBB, 0x5C, 0x4C, 0x6C, 0x34, 0x0F,
    0x45, 0xFB, 0x83, 0xFE, 0x30, 0x89, 0xF8, 0x0F, 0x44, 0xC3, 0x83, 0xFA, 0x00, 0x0F, 0x45, 0xC7,
    0xCC, 0x45, 0x28, 0xF5, 0xCE, 0x44, 0x89, 0xC0, 0x5B, 0x41, 0x5C, 0x41, 0x5D, 0x41, 0x5E, 0x41,
    0x5F, 0x5D, 0xC3 
]

shellcode_stage_2 = [
    0x55, 0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54, 0x53, 0x0F, 0xB6, 0x01, 0xC1, 0xE0, 0x08,
    0x44, 0x0F, 0xB6, 0x61, 0x01, 0x41, 0x09, 0xC4, 0x0F, 0xB6, 0x41, 0x02, 0xC1, 0xE0, 0x08, 0x44,
    0x0F, 0xB6, 0x79, 0x03, 0x89, 0xC6, 0xF7, 0xD6, 0x44, 0x89, 0xFF, 0xF7, 0xD7, 0x81, 0xE6, 0x9E,
    0xE9, 0xFF, 0xFF, 0x25, 0x00, 0x16, 0x00, 0x00, 0x81, 0xE7, 0x9E, 0xE9, 0xFF, 0xFF, 0x41, 0x83,
    0xE7, 0x61, 0x09, 0xF0, 0x41, 0x09, 0xFF, 0x41, 0x31, 0xC7, 0x0F, 0xB6, 0x41, 0x04, 0xC1, 0xE0,
    0x08, 0x0F, 0xB6, 0x69, 0x05, 0x89, 0xC6, 0xF7, 0xD6, 0x89, 0xEF, 0xF7, 0xD7, 0x81, 0xE6, 0x2A,
    0x56, 0x00, 0x00, 0x25, 0x00, 0xA9, 0xFF, 0xFF, 0x81, 0xE7, 0x2A, 0x56, 0x00, 0x00, 0x81, 0xE5,
    0xD5, 0x00, 0x00, 0x00, 0x09, 0xF0, 0x09, 0xFD, 0x31, 0xC5, 0x0F, 0xB6, 0x41, 0x06, 0xC1, 0xE0,
    0x08, 0x44, 0x0F, 0xB6, 0x71, 0x07, 0x89, 0xC1, 0xF7, 0xD1, 0x44, 0x89, 0xF6, 0xF7, 0xD6, 0x81,
    0xE1, 0x89, 0x50, 0x00, 0x00, 0x25, 0x00, 0xAF, 0xFF, 0xFF, 0x81, 0xE6, 0x89, 0x50, 0x00, 0x00,
    0x41, 0x83, 0xE6, 0x76, 0x09, 0xC8, 0x41, 0x09, 0xF6, 0x41, 0x31, 0xC6, 0x45, 0x8B, 0x28, 0x45,
    0x8B, 0x50, 0x04, 0x48, 0x89, 0x54, 0x24, 0xF8, 0x41, 0xBB, 0xF0, 0x9A, 0x4D, 0x10, 0x45, 0x31,
    0xC0, 0xB9, 0x48, 0xD1, 0x91, 0xC7, 0x41, 0xB9, 0xBA, 0xA3, 0x89, 0xFD, 0xCC, 0x20, 0xEA, 0x3A,
    0x1E, 0xF7, 0xDA, 0x29, 0xF2, 0xF7, 0xDA, 0x89, 0xF0, 0xF7, 0xD0, 0x89, 0x44, 0x24, 0xF0, 0x25,
    0xC5, 0x8E, 0xFF, 0xFF, 0x89, 0xF7, 0x81, 0xE7, 0x3A, 0x71, 0x00, 0x00, 0x44, 0x89, 0xE5, 0xF7,
    0xD5, 0x81, 0xE5, 0xC5, 0x8E, 0xFF, 0xFF, 0x41, 0x81, 0xE4, 0x3A, 0x71, 0x00, 0x00, 0x09, 0xC7,
    0x41, 0x09, 0xEC, 0x41, 0x31, 0xFC, 0x0F, 0xB7, 0xEA, 0x89, 0xD0, 0xF7, 0xD0, 0x89, 0xC7, 0x81,
    0xE7, 0x72, 0x3E, 0x00, 0x00, 0x81, 0xE2, 0x8D, 0xC1, 0xFF, 0xFF, 0x44, 0x89, 0xC3, 0x45, 0x89,
    0xF0, 0x41, 0xF7, 0xD0, 0x41, 0x81, 0xE0, 0x72, 0x3E, 0x00, 0x00, 0x41, 0x81, 0xE6, 0x8D, 0xC1,
    0xFF, 0xFF, 0x09, 0xFA, 0x45, 0x09, 0xC6, 0x41, 0x31, 0xD6, 0x0D, 0x00, 0x00, 0xFF, 0xFF, 0x21,
    0xC3, 0x23, 0x6C, 0x24, 0xF4, 0x09, 0xDD, 0x8B, 0x54, 0x24, 0xF0, 0x81, 0xE2, 0x38, 0xA4, 0xFF,
    0xFF, 0x81, 0xE6, 0xC7, 0x5B, 0x00, 0x00, 0x44, 0x89, 0xF8, 0xF7, 0xD0, 0x25, 0x38, 0xA4, 0xFF,
    0xFF, 0x41, 0x81, 0xE7, 0xC7, 0x5B, 0x00, 0x00, 0x09, 0xD6, 0x41, 0x09, 0xC7, 0x41, 0x31, 0xF7,
    0x48, 0x8B, 0x54, 0x24, 0xD8, 0x48, 0x83, 0xC2, 0x0C, 0x44, 0x8B, 0x44, 0x24, 0xE8, 0x41, 0xFF,
    0xC0, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x2E, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x0F, 0xB7, 0xDC, 0xB8, 0x49, 0x23, 0xB0, 0x29, 0x3D, 0x49, 0x23, 0xB0, 0x29, 0xCC, 0xF2,
    0x6F, 0xCE, 0x70, 0xE5, 0x44, 0x89, 0x44, 0x24, 0xE8, 0x48, 0x89, 0x54, 0x24, 0xD8, 0x44, 0x89,
    0x5C, 0x24, 0xE0, 0x66, 0x44, 0x89, 0x7C, 0x24, 0xD2, 0x44, 0x89, 0x54, 0x24, 0xEC, 0x44, 0x89,
    0x6C, 0x24, 0xCC, 0x66, 0x89, 0x6C, 0x24, 0xD4, 0x66, 0x44, 0x89, 0x74, 0x24, 0xD6, 0x8B, 0x44,
    0x24, 0xE8, 0x48, 0x8B, 0x74, 0x24, 0xD8, 0x0F, 0xB7, 0x36, 0x89, 0x5C, 0x24, 0xC4, 0x89, 0x74,
    0x24, 0xC8, 0x8B, 0x74, 0x24, 0xC4, 0x0F, 0xAF, 0x74, 0x24, 0xC8, 0x89, 0x74, 0x24, 0xC0, 0xBE,
    0x22, 0xF7, 0x3D, 0x8A, 0x81, 0xFE, 0x47, 0xD1, 0x91, 0xC7, 0xCC, 0x93, 0x0F, 0x1F, 0x40, 0x00,
    0x81, 0xFE, 0x48, 0xD1, 0x91, 0xC7, 0xCC, 0x69, 0x8B, 0x74, 0x24, 0xC0, 0x8B, 0x7C, 0x24, 0xC0,
    0x0F, 0xAC, 0xF7, 0x10, 0x81, 0xC7, 0xCA, 0x9A, 0x4E, 0xE6, 0x2B, 0x7C, 0x24, 0xC0, 0x81, 0xC7,
    0x36, 0x65, 0xB1, 0x19, 0xC1, 0xEF, 0x10, 0xFF, 0xC7, 0xCC, 0xA2, 0x0F, 0x1F, 0x44, 0x00, 0x00,
    0x83, 0x7C, 0x24, 0xC0, 0x00, 0xBE, 0x73, 0x32, 0xB9, 0x87, 0x0F, 0x45, 0xF1, 0x81, 0xFE, 0x47,
    0xD1, 0x91, 0xC7, 0xCC, 0x9B, 0x81, 0xFE, 0x22, 0xF7, 0x3D, 0x8A, 0xCC, 0xF0, 0x81, 0xFE, 0x73,
    0x32, 0xB9, 0x87, 0xCC, 0x4A, 0x55, 0x9A, 0x0D, 0x8C, 0xBF, 0x26, 0x72, 0xE2, 0xE3, 0x2B, 0x7C,
    0x24, 0xC4, 0x2B, 0x7C, 0x24, 0xC8, 0x81, 0xC7, 0xDB, 0x8D, 0x1D, 0x1C, 0xBE, 0xCC, 0xC0, 0x1D,
    0x40, 0x81, 0xFE, 0x47, 0xD1, 0x91, 0xC7, 0xCC, 0xC5, 0xCC, 0xA3, 0x0F, 0x1F, 0x44, 0x00, 0x00,
    0x81, 0xFE, 0xCC, 0xC0, 0x1D, 0x40, 0xCC, 0x2C, 0x18, 0xFF, 0x4C, 0x66, 0x83, 0xF8, 0x08, 0x66,
    0x89, 0x7C, 0x24, 0xD0, 0x48, 0x8B, 0x44, 0x24, 0xD8, 0x0F, 0xB7, 0x40, 0x02, 0x89, 0x44, 0x24,
    0xE4, 0xB8, 0xCC, 0xF8, 0xF0, 0x60, 0x41, 0x0F, 0x4C, 0xC1, 0x3D, 0x49, 0x23, 0xB0, 0x29, 0xCC,
    0x66, 0x4B, 0xC2, 0xE3, 0xBA, 0x3D, 0xBA, 0xA3, 0x89, 0xFD, 0xCC, 0xEF, 0x2C, 0x9D, 0xFC, 0xC9,
    0x44, 0x0F, 0xB7, 0x44, 0x24, 0xD2, 0x8B, 0x44, 0x24, 0xE4, 0xF7, 0xD8, 0x41, 0x29, 0xC0, 0x48,
    0x8B, 0x44, 0x24, 0xD8, 0x66, 0x44, 0x8B, 0x78, 0x04, 0x66, 0x44, 0x03, 0x7C, 0x24, 0xD4, 0x8B,
    0x44, 0x24, 0xCC, 0xC1, 0xE0, 0x04, 0x8B, 0x54, 0x24, 0xCC, 0xC1, 0xEA, 0x05, 0x89, 0xD6, 0xF7,
    0xD6, 0x81, 0xE6, 0x0F, 0x21, 0x8C, 0x56, 0x81, 0xE2, 0xF0, 0xDE, 0x73, 0x01, 0x89, 0xC5, 0xF7,
    0xD5, 0x81, 0xE5, 0x0F, 0x21, 0x8C, 0x56, 0x25, 0xF0, 0xDE, 0x73, 0xA9, 0x09, 0xF2, 0x09, 0xE8,
    0x31, 0xD0, 0x8B, 0x54, 0x24, 0xCC, 0x01, 0xC2, 0x8B, 0x44, 0x24, 0xE0, 0xC1, 0xE8, 0x0B, 0x89,
    0xC6, 0x81, 0xF6, 0xFC, 0xFF, 0x1F, 0x00, 0x21, 0xC6, 0x48, 0x8B, 0x44, 0x24, 0xF8, 0x8B, 0x04,
    0xB0, 0x03, 0x44, 0x24, 0xE0, 0x89, 0xC6, 0xF7, 0xD6, 0x21, 0xD6, 0xF7, 0xD2, 0x21, 0xC2, 0x09,
    0xF2, 0x44, 0x8B, 0x54, 0x24, 0xEC, 0x41, 0x29, 0xD2, 0x48, 0x8B, 0x44, 0x24, 0xD8, 0x0F, 0xB7,
    0x40, 0x06, 0x0F, 0xB7, 0x54, 0x24, 0xD6, 0x89, 0x54, 0x24, 0xC4, 0x89, 0x44, 0x24, 0xC8, 0x8B,
    0x44, 0x24, 0xC4, 0x0F, 0xAF, 0x44, 0x24, 0xC8, 0x89, 0x44, 0x24, 0xC0, 0xB8, 0x22, 0xF7, 0x3D,
    0x8A, 0x3D, 0x47, 0xD1, 0x91, 0xC7, 0xCC, 0x21, 0x3D, 0x48, 0xD1, 0x91, 0xC7, 0xCC, 0x7E, 0xA2,
    0x83, 0x28, 0x34, 0x44, 0x8B, 0x74, 0x24, 0xC0, 0x41, 0xC1, 0xE6, 0x10, 0x8B, 0x44, 0x24, 0xC0,
    0xC1, 0xE8, 0x10, 0x89, 0xC2, 0xF7, 0xD2, 0x44, 0x89, 0xF6, 0xF7, 0xD6, 0x81, 0xE2, 0x1A, 0xAD,
    0x4D, 0x33, 0x25, 0xE5, 0x52, 0x00, 0x00, 0x81, 0xE6, 0x1A, 0xAD, 0x4D, 0x33, 0x41, 0x81, 0xE6,
    0x00, 0x00, 0xB2, 0xCC, 0x09, 0xD0, 0x41, 0x09, 0xF6, 0x41, 0x31, 0xC6, 0x41, 0x81, 0xC6, 0xF4,
    0xE5, 0x75, 0x11, 0x44, 0x2B, 0x74, 0x24, 0xC0, 0x41, 0x81, 0xC6, 0x0C, 0x1A, 0x8A, 0xEE, 0x41,
    0xC1, 0xEE, 0x10, 0x41, 0xFF, 0xC6, 0xCC, 0xF5, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x83, 0x7C, 0x24, 0xC0, 0x00, 0xB8, 0x73, 0x32, 0xB9, 0x87, 0x0F, 0x45, 0xC1, 0x3D, 0x47, 0xD1,
    0x91, 0xC7, 0xCC, 0xFC, 0x3D, 0x22, 0xF7, 0x3D, 0x8A, 0xCC, 0xB1, 0x3D, 0x73, 0x32, 0xB9, 0x87,
    0xCC, 0x97, 0x5B, 0xE8, 0xE7, 0x02, 0x41, 0xBE, 0x1F, 0x0F, 0x63, 0x3F, 0x44, 0x2B, 0x74, 0x24,
    0xC4, 0x44, 0x2B, 0x74, 0x24, 0xC8, 0x41, 0x81, 0xC6, 0xE2, 0xF0, 0x9C, 0xC0, 0xB8, 0xCC, 0xC0,
    0x1D, 0x40, 0x3D, 0x47, 0xD1, 0x91, 0xC7, 0xCC, 0xE1, 0xCC, 0xFF, 0xA7, 0xF2, 0xAE, 0x3D, 0xCC,
    0xC0, 0x1D, 0x40, 0xCC, 0xD0, 0xB1, 0xED, 0x9B, 0x8C, 0x44, 0x0F, 0xB7, 0x64, 0x24, 0xD0, 0x44,
    0x89, 0xE0, 0xF7, 0xD0, 0x25, 0x12, 0xA2, 0xFF, 0xFF, 0x44, 0x89, 0xE2, 0x81, 0xE2, 0xED, 0x5D,
    0x00, 0x00, 0x44, 0x89, 0xFE, 0xF7, 0xD6, 0x81, 0xE6, 0x12, 0xA2, 0xFF, 0xFF, 0x44, 0x89, 0xFD,
    0x81, 0xE5, 0xED, 0x5D, 0x00, 0x00, 0x09, 0xC2, 0x09, 0xF5, 0x31, 0xD5, 0x44, 0x8B, 0x5C, 0x24,
    0xE0, 0xB8, 0xA2, 0x4C, 0xF6, 0x3D, 0x41, 0x01, 0xC3, 0x48, 0x8B, 0x44, 0x24, 0xD8, 0x0F, 0xB7,
    0x40, 0x08, 0x0F, 0xB7, 0xD5, 0x89, 0x54, 0x24, 0xC4, 0x89, 0x44, 0x24, 0xC8, 0x8B, 0x44, 0x24,
    0xC4, 0x0F, 0xAF, 0x44, 0x24, 0xC8, 0x89, 0x44, 0x24, 0xC0, 0xB8, 0x22, 0xF7, 0x3D, 0x8A, 0x3D,
    0x47, 0xD1, 0x91, 0xC7, 0xCC, 0x50, 0x3D, 0x48, 0xD1, 0x91, 0xC7, 0xCC, 0xEE, 0x8B, 0x44, 0x24,
    0xC0, 0x8B, 0x74, 0x24, 0xC0, 0x0F, 0xAC, 0xC6, 0x10, 0x81, 0xC6, 0x93, 0x05, 0xC8, 0x7E, 0x2B,
    0x74, 0x24, 0xC0, 0x81, 0xC6, 0x6D, 0xFA, 0x37, 0x81, 0xC1, 0xEE, 0x10, 0xF7, 0xDE, 0xBA, 0x01,
    0x00, 0x00, 0x00, 0x29, 0xF2, 0xCC, 0x4B, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x83, 0x7C, 0x24, 0xC0, 0x00, 0xB8, 0x73, 0x32, 0xB9, 0x87, 0x0F, 0x45, 0xC1, 0x3D, 0x47, 0xD1,
    0x91, 0xC7, 0xCC, 0x37, 0x3D, 0x22, 0xF7, 0x3D, 0x8A, 0xCC, 0x5E, 0x3D, 0x73, 0x32, 0xB9, 0x87,
    0xCC, 0x4F, 0xB2, 0xDF, 0xE2, 0x3C, 0xBA, 0x3D, 0x49, 0x4A, 0xC7, 0x2B, 0x54, 0x24, 0xC4, 0x2B,
    0x54, 0x24, 0xC8, 0x81, 0xC2, 0xC4, 0xB6, 0xB5, 0x38, 0xB8, 0xCC, 0xC0, 0x1D, 0x40, 0x3D, 0x47,
    0xD1, 0x91, 0xC7, 0xCC, 0x63, 0xCC, 0x14, 0x51, 0x87, 0x52, 0x3D, 0xCC, 0xC0, 0x1D, 0x40, 0xCC,
    0x63, 0x7E, 0x82, 0x88, 0xBA, 0x44, 0x89, 0xF5, 0xF7, 0xD5, 0x81, 0xE5, 0x0E, 0xFE, 0x00, 0x00,
    0x44, 0x89, 0xF3, 0x81, 0xE3, 0xF1, 0x01, 0x00, 0x00, 0x44, 0x89, 0xC0, 0xF7, 0xD0, 0x89, 0x44,
    0x24, 0xF4, 0x25, 0x0E, 0xFE, 0x00, 0x00, 0x44, 0x89, 0xC6, 0x81, 0xE6, 0xF1, 0x01, 0x00, 0x00,
    0x09, 0xEB, 0x09, 0xC6, 0x31, 0xDE, 0x01, 0xD6, 0x44, 0x89, 0xD0, 0xC1, 0xE0, 0x04, 0x44, 0x89,
    0xD5, 0xC1, 0xED, 0x05, 0x89, 0xC3, 0xF7, 0xD3, 0x21, 0xEB, 0xF7, 0xD5, 0x21, 0xC5, 0x09, 0xDD,
    0x44, 0x89, 0xD3, 0xF7, 0xDB, 0x29, 0xEB, 0xF7, 0xDB, 0x44, 0x89, 0xD8, 0x83, 0xF0, 0xFC, 0x44,
    0x21, 0xD8, 0x48, 0x8B, 0x6C, 0x24, 0xF8, 0x44, 0x89, 0xDF, 0xF7, 0xDF, 0x2B, 0x7C, 0x85, 0x00,
    0xF7, 0xDF, 0x89, 0xF8, 0xF7, 0xD0, 0x25, 0xE8, 0x24, 0x1A, 0x6D, 0x81, 0xE7, 0x17, 0xDB, 0xE5,
    0x92, 0x89, 0xDD, 0xF7, 0xD5, 0x81, 0xE5, 0xE8, 0x24, 0x1A, 0x6D, 0x81, 0xE3, 0x17, 0xDB, 0xE5,
    0x92, 0x09, 0xC7, 0x09, 0xEB, 0x31, 0xFB, 0x44, 0x8B, 0x6C, 0x24, 0xCC, 0x41, 0x29, 0xDD, 0x48,
    0x8B, 0x44, 0x24, 0xD8, 0x0F, 0xB7, 0x40, 0x0A, 0x0F, 0xB7, 0xF6, 0x89, 0x74, 0x24, 0xC4, 0x89,
    0x44, 0x24, 0xC8, 0x8B, 0x44, 0x24, 0xC4, 0x0F, 0xAF, 0x44, 0x24, 0xC8, 0x89, 0x44, 0x24, 0xC0,
    0xBD, 0x22, 0xF7, 0x3D, 0x8A, 0x81, 0xFD, 0x47, 0xD1, 0x91, 0xC7, 0xCC, 0x96, 0x81, 0xFD, 0x48,
    0xD1, 0x91, 0xC7, 0xCC, 0xD5, 0x8B, 0x44, 0x24, 0xC0, 0x8B, 0x74, 0x24, 0xC0, 0x0F, 0xAC, 0xC6,
    0x10, 0x81, 0xC6, 0xFF, 0x14, 0x88, 0x02, 0x2B, 0x74, 0x24, 0xC0, 0x81, 0xC6, 0x01, 0xEB, 0x77,
    0xFD, 0xC1, 0xEE, 0x10, 0xFF, 0xC6, 0xCC, 0x45, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x83, 0x7C, 0x24, 0xC0, 0x00, 0xBD, 0x73, 0x32, 0xB9, 0x87, 0x0F, 0x45, 0xE9, 0x81, 0xFD, 0x47,
    0xD1, 0x91, 0xC7, 0xCC, 0xD1, 0x81, 0xFD, 0x22, 0xF7, 0x3D, 0x8A, 0xCC, 0x80, 0x81, 0xFD, 0x73,
    0x32, 0xB9, 0x87, 0xCC, 0xC4, 0xBE, 0x1C, 0xB8, 0x57, 0xA1, 0x2B, 0x74, 0x24, 0xC4, 0x2B, 0x74,
    0x24, 0xC8, 0x81, 0xC6, 0xE5, 0x47, 0xA8, 0x5E, 0xBD, 0xCC, 0xC0, 0x1D, 0x40, 0x81, 0xFD, 0x47,
    0xD1, 0x91, 0xC7, 0xCC, 0xB4, 0xCC, 0x7E, 0x81, 0xFD, 0xCC, 0xC0, 0x1D, 0x40, 0xCC, 0xB3, 0x95,
    0x0B, 0x72, 0x60, 0x66, 0x66, 0x66, 0x66, 0x2E, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xCC, 0xB4, 0x66, 0x66, 0x66, 0x66, 0x66, 0x2E, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xCC, 0x8D, 0x66, 0x66, 0x66, 0x66, 0x66, 0x2E, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xCC, 0x22, 0x66, 0x66, 0x66, 0x66, 0x66, 0x2E, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xCC, 0x9B, 0x3D, 0xCC, 0xF8, 0xF0, 0x60, 0xCC, 0x4C, 0x0F, 0xB7, 0x44, 0x24, 0xD4, 0x8B, 0x74,
    0x24, 0xE4, 0xF7, 0xDE, 0x29, 0xC6, 0xF7, 0xDE, 0x48, 0x8B, 0x44, 0x24, 0xD8, 0x44, 0x0F, 0xB7,
    0x40, 0x04, 0x66, 0x44, 0x03, 0x44, 0x24, 0xD2, 0x48, 0x8B, 0x4C, 0x24, 0xD8, 0x0F, 0xB7, 0x49,
    0x06, 0x0F, 0xB7, 0x54, 0x24, 0xD6, 0x89, 0x54, 0x24, 0xC4, 0x89, 0x4C, 0x24, 0xC8, 0x8B, 0x4C,
    0x24, 0xC4, 0x0F, 0xAF, 0x4C, 0x24, 0xC8, 0x89, 0x4C, 0x24, 0xC0, 0xBF, 0x22, 0xF7, 0x3D, 0x8A,
    0xBA, 0x48, 0xD1, 0x91, 0xC7, 0x81, 0xFF, 0x47, 0xD1, 0x91, 0xC7, 0xCC, 0x57, 0x9E, 0x21, 0x1D,
    0x86, 0xCC, 0xE8, 0x66, 0x66, 0x66, 0x66, 0x2E, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xCC, 0x34, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x2B, 0x5C, 0x24, 0xC4, 0x2B, 0x5C, 0x24, 0xC8, 0xBF,
    0xCC, 0xC0, 0x1D, 0x40, 0x81, 0xFF, 0x47, 0xD1, 0x91, 0xC7, 0xCC, 0xDE, 0x81, 0xFF, 0x48, 0xD1,
    0x91, 0xC7, 0xCC, 0x0E, 0x8B, 0x5C, 0x24, 0xC0, 0xC1, 0xE3, 0x10, 0x8B, 0x7C, 0x24, 0xC0, 0xC1,
    0xEF, 0x10, 0x89, 0xFD, 0xF7, 0xD5, 0x89, 0xD9, 0xF7, 0xD1, 0x81, 0xE5, 0x40, 0x15, 0x8A, 0x25,
    0x81, 0xE7, 0xBF, 0xEA, 0x00, 0x00, 0x81, 0xE1, 0x40, 0x15, 0x8A, 0x25, 0x81, 0xE3, 0x00, 0x00,
    0x75, 0xDA, 0x09, 0xEF, 0x09, 0xCB, 0x31, 0xFB, 0x81, 0xC3, 0x87, 0x18, 0x6B, 0xBE, 0x2B, 0x5C,
    0x24, 0xC0, 0x81, 0xC3, 0x79, 0xE7, 0x94, 0x41, 0xC1, 0xEB, 0x10, 0xFF, 0xC3, 0xCC, 0x65, 0x90,
    0x83, 0x7C, 0x24, 0xC0, 0x00, 0xBF, 0x73, 0x32, 0xB9, 0x87, 0x0F, 0x45, 0xFA, 0x81, 0xFF, 0x47,
    0xD1, 0x91, 0xC7, 0xCC, 0x88, 0x81, 0xFF, 0x22, 0xF7, 0x3D, 0x8A, 0xCC, 0xDA, 0x81, 0xFF, 0x73,
    0x32, 0xB9, 0x87, 0xCC, 0x0A, 0x76, 0x3E, 0x56, 0xDC, 0xCC, 0xF1, 0xB0, 0xA5, 0x17, 0x81, 0xFF,
    0xCC, 0xC0, 0x1D, 0x40, 0xCC, 0x74, 0x1F, 0x76, 0xE3, 0xD1, 0x0F, 0xB7, 0x4C, 0x24, 0xD0, 0x89,
    0xCD, 0xC1, 0xED, 0x08, 0xC1, 0xE1, 0x08, 0x89, 0xCF, 0xF7, 0xD7, 0x81, 0xCF, 0x73, 0x00, 0xCC,
    0xC0, 0x89, 0xEA, 0xF7, 0xD2, 0x81, 0xE7, 0x73, 0x60, 0xCC, 0xC0, 0x81, 0xE1, 0x00, 0x9F, 0x00,
    0x00, 0x81, 0xE2, 0x73, 0x60, 0xCC, 0xC0, 0x81, 0xE5, 0x8C, 0x00, 0x00, 0x00, 0x09, 0xF9, 0x09,
    0xD5, 0x31, 0xCD, 0x44, 0x8B, 0x4C, 0x24, 0xCC, 0x89, 0xF1, 0x81, 0xF1, 0x00, 0x00, 0xFF, 0xFF,
    0x21, 0xF1, 0x89, 0xCA, 0xC1, 0xEA, 0x08, 0xC1, 0xE1, 0x08, 0x89, 0xD6, 0xF7, 0xD6, 0x89, 0xC8,
    0xF7, 0xD0, 0x89, 0xF7, 0x81, 0xE7, 0x70, 0xE1, 0x00, 0x00, 0x81, 0xE2, 0x8F, 0x1E, 0x00, 0x00,
    0x09, 0xC6, 0x25, 0x70, 0xE1, 0x00, 0x00, 0x81, 0xE1, 0x00, 0x1E, 0x00, 0x00, 0x09, 0xFA, 0x09,
    0xC1, 0x31, 0xD1, 0xF7, 0xD6, 0x09, 0xCE, 0xC1, 0xE6, 0x10, 0x44, 0x89, 0xC8, 0xF7, 0xD0, 0x21,
    0xF0, 0xF7, 0xD6, 0x44, 0x21, 0xCE, 0x09, 0xC6, 0x89, 0xF0, 0xF7, 0xD0, 0x21, 0xE8, 0xF7, 0xD5,
    0x21, 0xF5, 0x09, 0xC5, 0x41, 0x0F, 0xB7, 0xC8, 0x0F, 0xC9, 0x8B, 0x74, 0x24, 0xEC, 0x89, 0xD8,
    0x35, 0x00, 0x00, 0xFF, 0xFF, 0x21, 0xD8, 0x89, 0xC2, 0xC1, 0xEA, 0x08, 0xC1, 0xE0, 0x08, 0x89,
    0xD7, 0x21, 0xC7, 0x31, 0xD0, 0x09, 0xF8, 0x0F, 0xA4, 0xC8, 0x10, 0x89, 0xC1, 0xF7, 0xD1, 0x81,
    0xE1, 0xF4, 0x41, 0x38, 0x7E, 0x25, 0x0B, 0xBE, 0xC7, 0x81, 0x89, 0xF2, 0xF7, 0xD2, 0x81, 0xE2,
    0xF4, 0x41, 0x38, 0x7E, 0x81, 0xE6, 0x0B, 0xBE, 0xC7, 0x81, 0x09, 0xC8, 0x09, 0xD6, 0x31, 0xC6,
    0x89, 0xE8, 0xF7, 0xD0, 0x89, 0xF1, 0xF7, 0xD1, 0x89, 0xC2, 0x81, 0xE2, 0xAF, 0x15, 0x62, 0x99,
    0x81, 0xE5, 0x50, 0xEA, 0x9D, 0x66, 0x09, 0xC8, 0x81, 0xE1, 0xAF, 0x15, 0x62, 0x99, 0x81, 0xE6,
    0x50, 0xEA, 0x9D, 0x66, 0x09, 0xD5, 0x09, 0xCE, 0x31, 0xEE, 0xF7, 0xD0, 0x09, 0xF0, 0x5B, 0x41,
    0x5C, 0x41, 0x5D, 0x41, 0x5E, 0x41, 0x5F, 0x5D, 0xC3, 0x0F, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0xCC, 0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
]


# Fix tables.
tbl_A = [
    0x00A00400, 0x01400581, 0x81E00601, 0x832606C1, 0x85E80782, 0x86260843, 0x00A00924,
    0x00A009C0, 0x82800A62, 0x83C20B22, 0x86400BE3, 0x86720CA3, 0x80A00D84, 0x40840DE0,
    0x84620F62, 0x875E1023, 0x87FC10E3, 0x80A011C4, 0x40A01300, 0x85221462, 0x88A81523,
    0x80A01613, 0x80A016F4, 0x45AE18E0, 0x89581993, 0x89941A53, 0x80A01B34, 0x40A01DC0,
    0x89D01E73, 0x8A0C1F33, 0x80A02014, 0x40A022C0, 0x80842373, 0x8A6C2433, 0x80A02514,
    0x4AD428C0, 0x8B142973, 0x8B342A33, 0x80A02B14, 0x40A02EF0, 0x8B762FA3, 0x80A03084,
    0x4CEA30E0, 0x40A031B0, 0x40A03340, 0x8BDC36A3, 0x07003A84, 0x4BE03AA0, 0x8C4C3C63,
    0x07C03F74, 0x4C503F90, 0x40A044F0, 0x40A04A70, 0x40A04C50, 0x40A04E30, 0x40A05010,
    0x40A05310, 0x40A05850, 0x40A05950, 0x40A05B60, 0x40A05E90, 0x40A06210, 0x40A06700
]

tbl_B = [
    0x43200CC0, 0x856A19E4, 0x048A1FA1, 0x05002064, 0x04D82290, 0x04002432, 0x046024B3,
    0x8D402534, 0x048A2771, 0x04002790, 0x8D402864, 0x83482AF3, 0x8D842BA4, 0x07E83761,
    0x885C37D4, 0x083A3D60, 0x06F03F22, 0x07C03F93, 0x8D604004, 0x07E84271, 0x46F04290,
    0x8D604334, 0x09E84A41, 0x0A544AB4, 0x0A324D50, 0x094C4F22, 0x09C04F93, 0x8D805004,
    0x09E85231, 0x494C5250, 0x8D8052F4, 0x0C8A5FB1, 0x0CEE6034, 0x0CD06260, 0x0BFA6432,
    0x0C6064B3, 0x0D206534, 0x0C8A6731, 0x0BFA6750, 0x81A267D3, 0x0D206900, 0x0D406A00,
    0x0D606B00, 0x0D806C00, 0x0E606C74, 0x8F6A71B1, 0x0E987210, 0x0E607300, 0x0F6A74A1,
    0x0F9C7524, 0x0E7E79D0, 0x0E987B32, 0x0F407BB3, 0x8E647C33, 0x52007C90, 0x92007D44,
    0x12009000
]


# ----------------------------------------------------------------------------------------
def fix_shellcode(shellcode, tbl):
    """Replace all `int 3` instructions with the fixed jump offsets."""
    for ent in tbl:
        pt0 =  ent & 0xF
        pt1 = (ent >> 4) & 0x1FFF
        pt2 = (ent >> 17) & 0x1FFF
        pt3 =  ent >> 30

        # map[pt1] = (pt0, pt3, pt2)
        print(f'[+] Fix: map[{pt1:X}] = ({pt0:X}, 0x{pt3:X}, 0x{pt2:X}h)')

        val1 = pt0  # jcc/jmp opcode
        val2 = pt3  # instruction size
        val3 = pt2  # offset

        # Get instruction size
        if val2:
            if   val2 == 1: val2 = 5
            elif val2 == 2: val2 = 6
            else: raise Exception('Invalid insn size')
        else:
            val2 = 2

        # Get (un)conditional jump opcode
        if val1 & 0xFF == 0:    # JMP      
            # Opcodes for near and far jumps: 
            #   eb 02                   jmp    c <NEXT>
            #   e9 2e 01 00 00          jmp    14b <NEXT>
            if   val2 == 2: opcode = 0xEB
            elif val2 == 5: opcode = 0xe9
            else: raise Exception(f'Invalid combo: {val1:X} ~ {val2:X}')
        elif val1 & 0xFF == 1:  # JLE
            #   7e 08                   jle    a <NEXT>
            #   0f 8e 45 01 00 00       jle    14b <NEXT>
            if   val2 == 2: opcode = 0x7e
            elif val2 == 6: opcode = 0x0f, 0x8e
            else: raise Exception(f'Invalid combo: {val1:X} ~ {val2:X}')
        elif val1 & 0xFF == 2:  # JG
            #   7f 06                   jg     a <NEXT>
            #   0f 8f 3f 01 00 00       jg     14b <NEXT>
            if   val2 == 2: opcode = 0x7F
            elif val2 == 6: opcode = 0x0f, 0x8f
            else: raise Exception(f'Invalid combo: {val1:X} ~ {val2:X}')
        elif val1 & 0xFF == 3:  # JE
            #   74 04                   je     a <NEXT>
            #   0f 84 39 01 00 00       je     14b <NEXT>
            if   val2 == 2: opcode = 0x74
            elif val2 == 6: opcode = 0x0f, 0x84
            else: raise Exception(f'Invalid combo: {val1:X} ~ {val2:X}')
        elif val1 & 0xFF == 4:  # JNE
            #   75 02                   jne    a <NEXT>
            #   0f 85 33 01 00 00       jne    14b <NEXT>
            if   val2 == 2: opcode = 0x75
            elif val2 == 6: opcode = 0x0f, 0x85
            else: raise Exception(f'Invalid combo: {val1:X} ~ {val2:X}')
        else:
            raise Exception(f'Invalid val1: {val1}')
            
        # Get jump offset
        #
        #   context->Rip += val2;
        #   context->Rip = (DWORD64)virmem + val3;
        off = (val3 - pt1 - val2) & 0xFFFFFFFF

        print(f'[+] Jump offset: 0x{off:08X}')

        # (that's a stupid way to do it, but who cares it works :P)
        if val2 == 2:
            shellcode[pt1]   = opcode
            shellcode[pt1+1] = off & 0xFF
        elif val2 == 5:
            shellcode[pt1]   = opcode
            shellcode[pt1+1] = off & 0xFF
            shellcode[pt1+2] = (off >> 8) & 0xFF
            shellcode[pt1+3] = (off >>16) & 0xFF
            shellcode[pt1+4] = (off >>24) & 0xFF
        elif val2 == 6:
            shellcode[pt1]   = opcode[0]
            shellcode[pt1+1] = opcode[1]
            shellcode[pt1+2] = off & 0xFF
            shellcode[pt1+3] = (off >> 8) & 0xFF
            shellcode[pt1+4] = (off >>16) & 0xFF
            shellcode[pt1+5] = (off >>24) & 0xFF
   
    print('[+] Patch shellcode ...')
    virt_mem_addr = ida_name.get_name_ea(idaapi.BADADDR, 'glo_virt_mem')
    off = ida_bytes.get_qword(virt_mem_addr)

    print(f'[+] Writing at: {off:08X}h')

    for i, b in enumerate(shellcode):
        ida_bytes.patch_byte(off + i, b)


# ----------------------------------------------------------------------------------------

if __name__ == "__main__":
    print('[+] J scirpt to fix shellcode started.')
    
    # Set a breakpoint right after the assignment of `glo_virt_mem` and run the script.
    fix_shellcode(shellcode_stage_1, tbl_A)

    # Uncomment to run the script for the second stage of the payload.
#    fix_shellcode(shellcode_stage_2, tbl_B)

    print('[+] Program finished. Bye bye :)')

# ----------------------------------------------------------------------------------------
'''
[+] J scirpt to fix shellcode started.
[+] Fix: map[40] = (0, 0x0, 0x50h)
[+] Jump offset: 0x0000000E
[+] Fix: map[58] = (1, 0x0, 0xA0h)
[+] Jump offset: 0x00000046
[+] Fix: map[60] = (1, 0x2, 0xF0h)
[+] Jump offset: 0x0000008A
[+] Fix: map[6C] = (1, 0x2, 0x193h)
[+] Jump offset: 0x00000121
[+] Fix: map[78] = (2, 0x2, 0x2F4h)
[+] Jump offset: 0x00000276
[+] Fix: map[84] = (3, 0x2, 0x313h)
[+] Jump offset: 0x00000289
[+] Fix: map[92] = (4, 0x0, 0x50h)
[+] Jump offset: 0xFFFFFFBC
[+] Fix: map[9C] = (0, 0x0, 0x50h)
[+] Jump offset: 0xFFFFFFB2
[+] Fix: map[A6] = (2, 0x2, 0x140h)
[+] Jump offset: 0x00000094
[+] Fix: map[B2] = (2, 0x2, 0x1E1h)
[+] Jump offset: 0x00000129
[+] Fix: map[BE] = (3, 0x2, 0x320h)
[+] Jump offset: 0x0000025C
[+] Fix: map[CA] = (3, 0x2, 0x339h)
[+] Jump offset: 0x00000269
[+] Fix: map[D8] = (4, 0x2, 0x50h)
[+] Jump offset: 0xFFFFFF72
[+] Fix: map[DE] = (0, 0x1, 0x42h)
[+] Jump offset: 0xFFFFFF5F
[+] Fix: map[F6] = (2, 0x2, 0x231h)
[+] Jump offset: 0x00000135
[+] Fix: map[102] = (3, 0x2, 0x3AFh)
[+] Jump offset: 0x000002A7
[+] Fix: map[10E] = (3, 0x2, 0x3FEh)
[+] Jump offset: 0x000002EA
[+] Fix: map[11C] = (4, 0x2, 0x50h)
[+] Jump offset: 0xFFFFFF2E
[+] Fix: map[130] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFF1B
[+] Fix: map[146] = (2, 0x2, 0x291h)
[+] Jump offset: 0x00000145
[+] Fix: map[152] = (3, 0x2, 0x454h)
[+] Jump offset: 0x000002FC
[+] Fix: map[161] = (3, 0x2, 0x50h)
[+] Jump offset: 0xFFFFFEE9
[+] Fix: map[16F] = (4, 0x2, 0x50h)
[+] Jump offset: 0xFFFFFEDB
[+] Fix: map[18E] = (0, 0x1, 0x2D7h)
[+] Jump offset: 0x00000144
[+] Fix: map[199] = (3, 0x2, 0x4ACh)
[+] Jump offset: 0x0000030D
[+] Fix: map[1A5] = (3, 0x2, 0x4CAh)
[+] Jump offset: 0x0000031F
[+] Fix: map[1B3] = (4, 0x2, 0x50h)
[+] Jump offset: 0xFFFFFE97
[+] Fix: map[1DC] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFE6F
[+] Fix: map[1E7] = (3, 0x2, 0x4E8h)
[+] Jump offset: 0x000002FB
[+] Fix: map[1F3] = (3, 0x2, 0x506h)
[+] Jump offset: 0x0000030D
[+] Fix: map[201] = (4, 0x2, 0x50h)
[+] Jump offset: 0xFFFFFE49
[+] Fix: map[22C] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFE1F
[+] Fix: map[237] = (3, 0x2, 0x42h)
[+] Jump offset: 0xFFFFFE05
[+] Fix: map[243] = (3, 0x2, 0x536h)
[+] Jump offset: 0x000002ED
[+] Fix: map[251] = (4, 0x2, 0x50h)
[+] Jump offset: 0xFFFFFDF9
[+] Fix: map[28C] = (0, 0x1, 0x56Ah)
[+] Jump offset: 0x000002D9
[+] Fix: map[297] = (3, 0x2, 0x58Ah)
[+] Jump offset: 0x000002ED
[+] Fix: map[2A3] = (3, 0x2, 0x59Ah)
[+] Jump offset: 0x000002F1
[+] Fix: map[2B1] = (4, 0x2, 0x50h)
[+] Jump offset: 0xFFFFFD99
[+] Fix: map[2EF] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFD5C
[+] Fix: map[2FA] = (3, 0x2, 0x5BBh)
[+] Jump offset: 0x000002BB
[+] Fix: map[308] = (4, 0x2, 0x50h)
[+] Jump offset: 0xFFFFFD42
[+] Fix: map[30E] = (0, 0x1, 0x675h)
[+] Jump offset: 0x00000362
[+] Fix: map[31B] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFD30
[+] Fix: map[334] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFD17
[+] Fix: map[36A] = (3, 0x2, 0x5EEh)
[+] Jump offset: 0x0000027E
[+] Fix: map[3A8] = (4, 0x0, 0x380h)
[+] Jump offset: 0xFFFFFFD6
[+] Fix: map[3AA] = (0, 0x1, 0x5F0h)
[+] Jump offset: 0x00000241
[+] Fix: map[3C6] = (3, 0x2, 0x626h)
[+] Jump offset: 0x0000025A
[+] Fix: map[3F7] = (4, 0x0, 0x3E0h)
[+] Jump offset: 0xFFFFFFE7
[+] Fix: map[3F9] = (0, 0x1, 0x628h)
[+] Jump offset: 0x0000022A
[+] Fix: map[44F] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFBFC
[+] Fix: map[4A7] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFBA4
[+] Fix: map[4C5] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFB86
[+] Fix: map[4E3] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFB68
[+] Fix: map[501] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFB4A
[+] Fix: map[531] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFB1A
[+] Fix: map[585] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFAC6
[+] Fix: map[595] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFAB6
[+] Fix: map[5B6] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFA95
[+] Fix: map[5E9] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFA62
[+] Fix: map[621] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFFA2A
[+] Fix: map[670] = (0, 0x1, 0x50h)
[+] Jump offset: 0xFFFFF9DB
[+] Patch shellcode ...
[+] Writing at: 000D0000h
[+] Program finished. Bye bye :)
'''
# ----------------------------------------------------------------------------------------
